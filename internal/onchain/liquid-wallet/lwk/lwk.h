

// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!



#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
	// We also try to prevent mixing versions of shared uniffi header structs.
	// If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V6
	#ifndef UNIFFI_SHARED_HEADER_V6
		#error Combining helper code from multiple versions of uniffi is not supported
	#endif // ndef UNIFFI_SHARED_HEADER_V6
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V6
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V6 in this file.           ⚠️

typedef struct RustBuffer {
	uint64_t capacity;
	uint64_t len;
	uint8_t *data;
} RustBuffer;

typedef struct ForeignBytes {
	int32_t len;
	const uint8_t *data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
	int8_t code;
	RustBuffer errorBuf;
} RustCallStatus;

#endif // UNIFFI_SHARED_H


#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t data, int8_t poll_result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiRustFutureContinuationCallback(
				UniffiRustFutureContinuationCallback cb, uint64_t data, int8_t poll_result)
{
	return cb(data, poll_result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
typedef void (*UniffiForeignFutureFree)(uint64_t handle);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureFree(
				UniffiForeignFutureFree cb, uint64_t handle)
{
	return cb(handle);
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t handle);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceFree(
				UniffiCallbackInterfaceFree cb, uint64_t handle)
{
	return cb(handle);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE
typedef struct UniffiForeignFuture {
    uint64_t handle;
    UniffiForeignFutureFree free;
} UniffiForeignFuture;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
typedef struct UniffiForeignFutureStructU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t callback_data, UniffiForeignFutureStructU8 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU8(
				UniffiForeignFutureCompleteU8 cb, uint64_t callback_data, UniffiForeignFutureStructU8 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
typedef struct UniffiForeignFutureStructI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t callback_data, UniffiForeignFutureStructI8 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI8(
				UniffiForeignFutureCompleteI8 cb, uint64_t callback_data, UniffiForeignFutureStructI8 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
typedef struct UniffiForeignFutureStructU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t callback_data, UniffiForeignFutureStructU16 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU16(
				UniffiForeignFutureCompleteU16 cb, uint64_t callback_data, UniffiForeignFutureStructU16 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
typedef struct UniffiForeignFutureStructI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t callback_data, UniffiForeignFutureStructI16 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI16(
				UniffiForeignFutureCompleteI16 cb, uint64_t callback_data, UniffiForeignFutureStructI16 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
typedef struct UniffiForeignFutureStructU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t callback_data, UniffiForeignFutureStructU32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU32(
				UniffiForeignFutureCompleteU32 cb, uint64_t callback_data, UniffiForeignFutureStructU32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
typedef struct UniffiForeignFutureStructI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t callback_data, UniffiForeignFutureStructI32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI32(
				UniffiForeignFutureCompleteI32 cb, uint64_t callback_data, UniffiForeignFutureStructI32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
typedef struct UniffiForeignFutureStructU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t callback_data, UniffiForeignFutureStructU64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU64(
				UniffiForeignFutureCompleteU64 cb, uint64_t callback_data, UniffiForeignFutureStructU64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
typedef struct UniffiForeignFutureStructI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t callback_data, UniffiForeignFutureStructI64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI64(
				UniffiForeignFutureCompleteI64 cb, uint64_t callback_data, UniffiForeignFutureStructI64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
typedef struct UniffiForeignFutureStructF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t callback_data, UniffiForeignFutureStructF32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteF32(
				UniffiForeignFutureCompleteF32 cb, uint64_t callback_data, UniffiForeignFutureStructF32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
typedef struct UniffiForeignFutureStructF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t callback_data, UniffiForeignFutureStructF64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteF64(
				UniffiForeignFutureCompleteF64 cb, uint64_t callback_data, UniffiForeignFutureStructF64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
typedef struct UniffiForeignFutureStructPointer {
    void* returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructPointer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
typedef void (*UniffiForeignFutureCompletePointer)(uint64_t callback_data, UniffiForeignFutureStructPointer result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompletePointer(
				UniffiForeignFutureCompletePointer cb, uint64_t callback_data, UniffiForeignFutureStructPointer result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
typedef struct UniffiForeignFutureStructRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t callback_data, UniffiForeignFutureStructRustBuffer result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteRustBuffer(
				UniffiForeignFutureCompleteRustBuffer cb, uint64_t callback_data, UniffiForeignFutureStructRustBuffer result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
typedef struct UniffiForeignFutureStructVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureStructVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t callback_data, UniffiForeignFutureStructVoid result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteVoid(
				UniffiForeignFutureCompleteVoid cb, uint64_t callback_data, UniffiForeignFutureStructVoid result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FOREIGN_PERSISTER_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FOREIGN_PERSISTER_METHOD0
typedef void (*UniffiCallbackInterfaceForeignPersisterMethod0)(uint64_t uniffi_handle, uint64_t index, RustBuffer* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceForeignPersisterMethod0(
				UniffiCallbackInterfaceForeignPersisterMethod0 cb, uint64_t uniffi_handle, uint64_t index, RustBuffer* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, index, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FOREIGN_PERSISTER_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FOREIGN_PERSISTER_METHOD1
typedef void (*UniffiCallbackInterfaceForeignPersisterMethod1)(uint64_t uniffi_handle, void* update, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceForeignPersisterMethod1(
				UniffiCallbackInterfaceForeignPersisterMethod1 cb, uint64_t uniffi_handle, void* update, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, update, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_FOREIGN_PERSISTER
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_FOREIGN_PERSISTER
typedef struct UniffiVTableCallbackInterfaceForeignPersister {
    UniffiCallbackInterfaceForeignPersisterMethod0 get;
    UniffiCallbackInterfaceForeignPersisterMethod1 push;
    UniffiCallbackInterfaceFree uniffiFree;
} UniffiVTableCallbackInterfaceForeignPersister;

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ADDRESS
void* uniffi_lwk_fn_clone_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ADDRESS
void uniffi_lwk_fn_free_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ADDRESS_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ADDRESS_NEW
void* uniffi_lwk_fn_constructor_address_new(RustBuffer s, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_IS_BLINDED
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_IS_BLINDED
int8_t uniffi_lwk_fn_method_address_is_blinded(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_QR_CODE_TEXT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_QR_CODE_TEXT
RustBuffer uniffi_lwk_fn_method_address_qr_code_text(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_QR_CODE_URI
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_QR_CODE_URI
RustBuffer uniffi_lwk_fn_method_address_qr_code_uri(void* ptr, RustBuffer pixel_per_module, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_SCRIPT_PUBKEY
void* uniffi_lwk_fn_method_address_script_pubkey(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_TO_UNCONFIDENTIAL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_TO_UNCONFIDENTIAL
void* uniffi_lwk_fn_method_address_to_unconfidential(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESS_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_address_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ADDRESSRESULT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ADDRESSRESULT
void* uniffi_lwk_fn_clone_addressresult(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ADDRESSRESULT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ADDRESSRESULT
void uniffi_lwk_fn_free_addressresult(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESSRESULT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESSRESULT_ADDRESS
void* uniffi_lwk_fn_method_addressresult_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESSRESULT_INDEX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ADDRESSRESULT_INDEX
uint32_t uniffi_lwk_fn_method_addressresult_index(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_AMP2
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_AMP2
void* uniffi_lwk_fn_clone_amp2(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_AMP2
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_AMP2
void uniffi_lwk_fn_free_amp2(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_AMP2_NEW_TESTNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_AMP2_NEW_TESTNET
void* uniffi_lwk_fn_constructor_amp2_new_testnet(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2_COSIGN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2_COSIGN
void* uniffi_lwk_fn_method_amp2_cosign(void* ptr, void* pset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2_DESCRIPTOR_FROM_STR
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2_DESCRIPTOR_FROM_STR
void* uniffi_lwk_fn_method_amp2_descriptor_from_str(void* ptr, RustBuffer keyorigin_xpub, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2_REGISTER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2_REGISTER
RustBuffer uniffi_lwk_fn_method_amp2_register(void* ptr, void* desc, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_AMP2DESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_AMP2DESCRIPTOR
void* uniffi_lwk_fn_clone_amp2descriptor(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_AMP2DESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_AMP2DESCRIPTOR
void uniffi_lwk_fn_free_amp2descriptor(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2DESCRIPTOR_DESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2DESCRIPTOR_DESCRIPTOR
void* uniffi_lwk_fn_method_amp2descriptor_descriptor(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2DESCRIPTOR_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_AMP2DESCRIPTOR_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_amp2descriptor_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ASSETAMOUNT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ASSETAMOUNT
void* uniffi_lwk_fn_clone_assetamount(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ASSETAMOUNT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ASSETAMOUNT
void uniffi_lwk_fn_free_assetamount(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ASSETAMOUNT_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ASSETAMOUNT_AMOUNT
uint64_t uniffi_lwk_fn_method_assetamount_amount(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ASSETAMOUNT_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ASSETAMOUNT_ASSET
RustBuffer uniffi_lwk_fn_method_assetamount_asset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_BIP
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_BIP
void* uniffi_lwk_fn_clone_bip(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_BIP
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_BIP
void uniffi_lwk_fn_free_bip(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_BIP_NEW_BIP49
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_BIP_NEW_BIP49
void* uniffi_lwk_fn_constructor_bip_new_bip49(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_BIP_NEW_BIP84
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_BIP_NEW_BIP84
void* uniffi_lwk_fn_constructor_bip_new_bip84(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_BIP_NEW_BIP87
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_BIP_NEW_BIP87
void* uniffi_lwk_fn_constructor_bip_new_bip87(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_BLOCKHEADER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_BLOCKHEADER
void* uniffi_lwk_fn_clone_blockheader(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_BLOCKHEADER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_BLOCKHEADER
void uniffi_lwk_fn_free_blockheader(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_BLOCK_HASH
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_BLOCK_HASH
RustBuffer uniffi_lwk_fn_method_blockheader_block_hash(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_HEIGHT
uint32_t uniffi_lwk_fn_method_blockheader_height(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_MERKLE_ROOT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_MERKLE_ROOT
RustBuffer uniffi_lwk_fn_method_blockheader_merkle_root(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_PREV_BLOCKHASH
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_PREV_BLOCKHASH
RustBuffer uniffi_lwk_fn_method_blockheader_prev_blockhash(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_TIME
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_TIME
uint32_t uniffi_lwk_fn_method_blockheader_time(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_VERSION
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_BLOCKHEADER_VERSION
uint32_t uniffi_lwk_fn_method_blockheader_version(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_CONTRACT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_CONTRACT
void* uniffi_lwk_fn_clone_contract(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_CONTRACT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_CONTRACT
void uniffi_lwk_fn_free_contract(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_CONTRACT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_CONTRACT_NEW
void* uniffi_lwk_fn_constructor_contract_new(RustBuffer domain, RustBuffer issuer_pubkey, RustBuffer name, uint8_t precision, RustBuffer ticker, uint8_t version, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_CONTRACT_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_CONTRACT_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_contract_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ELECTRUMCLIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ELECTRUMCLIENT
void* uniffi_lwk_fn_clone_electrumclient(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ELECTRUMCLIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ELECTRUMCLIENT
void uniffi_lwk_fn_free_electrumclient(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ELECTRUMCLIENT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ELECTRUMCLIENT_NEW
void* uniffi_lwk_fn_constructor_electrumclient_new(RustBuffer electrum_url, int8_t tls, int8_t validate_domain, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_BROADCAST
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_BROADCAST
void* uniffi_lwk_fn_method_electrumclient_broadcast(void* ptr, void* tx, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_FULL_SCAN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_FULL_SCAN
RustBuffer uniffi_lwk_fn_method_electrumclient_full_scan(void* ptr, void* wollet, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_FULL_SCAN_TO_INDEX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_FULL_SCAN_TO_INDEX
RustBuffer uniffi_lwk_fn_method_electrumclient_full_scan_to_index(void* ptr, void* wollet, uint32_t index, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_GET_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_GET_TX
void* uniffi_lwk_fn_method_electrumclient_get_tx(void* ptr, void* txid, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_PING
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_PING
void uniffi_lwk_fn_method_electrumclient_ping(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_TIP
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ELECTRUMCLIENT_TIP
void* uniffi_lwk_fn_method_electrumclient_tip(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ESPLORACLIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ESPLORACLIENT
void* uniffi_lwk_fn_clone_esploraclient(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ESPLORACLIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ESPLORACLIENT
void uniffi_lwk_fn_free_esploraclient(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ESPLORACLIENT_FROM_BUILDER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ESPLORACLIENT_FROM_BUILDER
void* uniffi_lwk_fn_constructor_esploraclient_from_builder(RustBuffer builder, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ESPLORACLIENT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ESPLORACLIENT_NEW
void* uniffi_lwk_fn_constructor_esploraclient_new(RustBuffer url, void* network, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ESPLORACLIENT_NEW_WATERFALLS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_ESPLORACLIENT_NEW_WATERFALLS
void* uniffi_lwk_fn_constructor_esploraclient_new_waterfalls(RustBuffer url, void* network, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ESPLORACLIENT_BROADCAST
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ESPLORACLIENT_BROADCAST
void* uniffi_lwk_fn_method_esploraclient_broadcast(void* ptr, void* tx, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ESPLORACLIENT_FULL_SCAN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ESPLORACLIENT_FULL_SCAN
RustBuffer uniffi_lwk_fn_method_esploraclient_full_scan(void* ptr, void* wollet, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ESPLORACLIENT_FULL_SCAN_TO_INDEX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ESPLORACLIENT_FULL_SCAN_TO_INDEX
RustBuffer uniffi_lwk_fn_method_esploraclient_full_scan_to_index(void* ptr, void* wollet, uint32_t index, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ESPLORACLIENT_TIP
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ESPLORACLIENT_TIP
void* uniffi_lwk_fn_method_esploraclient_tip(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_EXTERNALUTXO
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_EXTERNALUTXO
void* uniffi_lwk_fn_clone_externalutxo(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_EXTERNALUTXO
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_EXTERNALUTXO
void uniffi_lwk_fn_free_externalutxo(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_EXTERNALUTXO_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_EXTERNALUTXO_NEW
void* uniffi_lwk_fn_constructor_externalutxo_new(uint32_t vout, void* tx, void* unblinded, uint32_t max_weight_to_satisfy, int8_t is_segwit, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_FOREIGNPERSISTER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_FOREIGNPERSISTER
void* uniffi_lwk_fn_clone_foreignpersister(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_FOREIGNPERSISTER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_FOREIGNPERSISTER
void uniffi_lwk_fn_free_foreignpersister(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_INIT_CALLBACK_VTABLE_FOREIGNPERSISTER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_INIT_CALLBACK_VTABLE_FOREIGNPERSISTER
void uniffi_lwk_fn_init_callback_vtable_foreignpersister(UniffiVTableCallbackInterfaceForeignPersister* vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_FOREIGNPERSISTER_GET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_FOREIGNPERSISTER_GET
RustBuffer uniffi_lwk_fn_method_foreignpersister_get(void* ptr, uint64_t index, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_FOREIGNPERSISTER_PUSH
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_FOREIGNPERSISTER_PUSH
void uniffi_lwk_fn_method_foreignpersister_push(void* ptr, void* update, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_FOREIGNPERSISTERLINK
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_FOREIGNPERSISTERLINK
void* uniffi_lwk_fn_clone_foreignpersisterlink(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_FOREIGNPERSISTERLINK
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_FOREIGNPERSISTERLINK
void uniffi_lwk_fn_free_foreignpersisterlink(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_FOREIGNPERSISTERLINK_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_FOREIGNPERSISTERLINK_NEW
void* uniffi_lwk_fn_constructor_foreignpersisterlink_new(void* persister, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ISSUANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_ISSUANCE
void* uniffi_lwk_fn_clone_issuance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ISSUANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_ISSUANCE
void uniffi_lwk_fn_free_issuance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_ASSET
RustBuffer uniffi_lwk_fn_method_issuance_asset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_ASSET_SATOSHI
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_ASSET_SATOSHI
RustBuffer uniffi_lwk_fn_method_issuance_asset_satoshi(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_IS_CONFIDENTIAL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_IS_CONFIDENTIAL
int8_t uniffi_lwk_fn_method_issuance_is_confidential(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_IS_ISSUANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_IS_ISSUANCE
int8_t uniffi_lwk_fn_method_issuance_is_issuance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_IS_NULL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_IS_NULL
int8_t uniffi_lwk_fn_method_issuance_is_null(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_IS_REISSUANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_IS_REISSUANCE
int8_t uniffi_lwk_fn_method_issuance_is_reissuance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_PREV_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_PREV_TXID
RustBuffer uniffi_lwk_fn_method_issuance_prev_txid(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_PREV_VOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_PREV_VOUT
RustBuffer uniffi_lwk_fn_method_issuance_prev_vout(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_TOKEN
RustBuffer uniffi_lwk_fn_method_issuance_token(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_TOKEN_SATOSHI
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_ISSUANCE_TOKEN_SATOSHI
RustBuffer uniffi_lwk_fn_method_issuance_token_satoshi(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_LWKTESTENV
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_LWKTESTENV
void* uniffi_lwk_fn_clone_lwktestenv(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_LWKTESTENV
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_LWKTESTENV
void uniffi_lwk_fn_free_lwktestenv(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_LWKTESTENV_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_LWKTESTENV_NEW
void* uniffi_lwk_fn_constructor_lwktestenv_new(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_ELECTRUM_URL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_ELECTRUM_URL
RustBuffer uniffi_lwk_fn_method_lwktestenv_electrum_url(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_GENERATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_GENERATE
void uniffi_lwk_fn_method_lwktestenv_generate(void* ptr, uint32_t blocks, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_GET_NEW_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_GET_NEW_ADDRESS
void* uniffi_lwk_fn_method_lwktestenv_get_new_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_HEIGHT
uint64_t uniffi_lwk_fn_method_lwktestenv_height(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_ISSUE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_ISSUE_ASSET
RustBuffer uniffi_lwk_fn_method_lwktestenv_issue_asset(void* ptr, uint64_t satoshi, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_SEND_TO_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_LWKTESTENV_SEND_TO_ADDRESS
void* uniffi_lwk_fn_method_lwktestenv_send_to_address(void* ptr, void* address, uint64_t satoshi, RustBuffer asset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_MNEMONIC
void* uniffi_lwk_fn_clone_mnemonic(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_MNEMONIC
void uniffi_lwk_fn_free_mnemonic(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_MNEMONIC_FROM_ENTROPY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_MNEMONIC_FROM_ENTROPY
void* uniffi_lwk_fn_constructor_mnemonic_from_entropy(RustBuffer b, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_MNEMONIC_FROM_RANDOM
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_MNEMONIC_FROM_RANDOM
void* uniffi_lwk_fn_constructor_mnemonic_from_random(uint8_t word_count, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_MNEMONIC_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_MNEMONIC_NEW
void* uniffi_lwk_fn_constructor_mnemonic_new(RustBuffer s, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_MNEMONIC_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_MNEMONIC_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_mnemonic_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_NETWORK
void* uniffi_lwk_fn_clone_network(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_NETWORK
void uniffi_lwk_fn_free_network(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_NETWORK_MAINNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_NETWORK_MAINNET
void* uniffi_lwk_fn_constructor_network_mainnet(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_NETWORK_REGTEST
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_NETWORK_REGTEST
void* uniffi_lwk_fn_constructor_network_regtest(RustBuffer policy_asset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_NETWORK_REGTEST_DEFAULT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_NETWORK_REGTEST_DEFAULT
void* uniffi_lwk_fn_constructor_network_regtest_default(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_NETWORK_TESTNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_NETWORK_TESTNET
void* uniffi_lwk_fn_constructor_network_testnet(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_DEFAULT_ELECTRUM_CLIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_DEFAULT_ELECTRUM_CLIENT
void* uniffi_lwk_fn_method_network_default_electrum_client(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_DEFAULT_ESPLORA_CLIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_DEFAULT_ESPLORA_CLIENT
void* uniffi_lwk_fn_method_network_default_esplora_client(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_IS_MAINNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_IS_MAINNET
int8_t uniffi_lwk_fn_method_network_is_mainnet(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_POLICY_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_POLICY_ASSET
RustBuffer uniffi_lwk_fn_method_network_policy_asset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_TX_BUILDER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_TX_BUILDER
void* uniffi_lwk_fn_method_network_tx_builder(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_NETWORK_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_network_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_OUTPOINT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_OUTPOINT
void* uniffi_lwk_fn_clone_outpoint(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_OUTPOINT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_OUTPOINT
void uniffi_lwk_fn_free_outpoint(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_OUTPOINT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_OUTPOINT_NEW
void* uniffi_lwk_fn_constructor_outpoint_new(RustBuffer s, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_OUTPOINT_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_OUTPOINT_TXID
void* uniffi_lwk_fn_method_outpoint_txid(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_OUTPOINT_VOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_OUTPOINT_VOUT
uint32_t uniffi_lwk_fn_method_outpoint_vout(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_OUTPOINT_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_OUTPOINT_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_outpoint_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PRECISION
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PRECISION
void* uniffi_lwk_fn_clone_precision(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PRECISION
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PRECISION
void uniffi_lwk_fn_free_precision(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_PRECISION_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_PRECISION_NEW
void* uniffi_lwk_fn_constructor_precision_new(uint8_t precision, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PRECISION_SATS_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PRECISION_SATS_TO_STRING
RustBuffer uniffi_lwk_fn_method_precision_sats_to_string(void* ptr, int64_t sats, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PRECISION_STRING_TO_SATS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PRECISION_STRING_TO_SATS
int64_t uniffi_lwk_fn_method_precision_string_to_sats(void* ptr, RustBuffer val, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSET
void* uniffi_lwk_fn_clone_pset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSET
void uniffi_lwk_fn_free_pset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_PSET_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_PSET_NEW
void* uniffi_lwk_fn_constructor_pset_new(RustBuffer base64, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_COMBINE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_COMBINE
void* uniffi_lwk_fn_method_pset_combine(void* ptr, void* other, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_EXTRACT_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_EXTRACT_TX
void* uniffi_lwk_fn_method_pset_extract_tx(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_FINALIZE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_FINALIZE
void* uniffi_lwk_fn_method_pset_finalize(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_INPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_INPUTS
RustBuffer uniffi_lwk_fn_method_pset_inputs(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_UNIQUE_ID
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_UNIQUE_ID
void* uniffi_lwk_fn_method_pset_unique_id(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSET_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_pset_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSETBALANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSETBALANCE
void* uniffi_lwk_fn_clone_psetbalance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSETBALANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSETBALANCE
void uniffi_lwk_fn_free_psetbalance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETBALANCE_BALANCES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETBALANCE_BALANCES
RustBuffer uniffi_lwk_fn_method_psetbalance_balances(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETBALANCE_FEE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETBALANCE_FEE
uint64_t uniffi_lwk_fn_method_psetbalance_fee(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETBALANCE_RECIPIENTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETBALANCE_RECIPIENTS
RustBuffer uniffi_lwk_fn_method_psetbalance_recipients(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSETDETAILS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSETDETAILS
void* uniffi_lwk_fn_clone_psetdetails(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSETDETAILS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSETDETAILS
void uniffi_lwk_fn_free_psetdetails(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETDETAILS_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETDETAILS_BALANCE
void* uniffi_lwk_fn_method_psetdetails_balance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETDETAILS_INPUTS_ISSUANCES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETDETAILS_INPUTS_ISSUANCES
RustBuffer uniffi_lwk_fn_method_psetdetails_inputs_issuances(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETDETAILS_SIGNATURES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETDETAILS_SIGNATURES
RustBuffer uniffi_lwk_fn_method_psetdetails_signatures(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSETINPUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSETINPUT
void* uniffi_lwk_fn_clone_psetinput(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSETINPUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSETINPUT
void uniffi_lwk_fn_free_psetinput(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_ISSUANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_ISSUANCE
RustBuffer uniffi_lwk_fn_method_psetinput_issuance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_ISSUANCE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_ISSUANCE_ASSET
RustBuffer uniffi_lwk_fn_method_psetinput_issuance_asset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_ISSUANCE_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_ISSUANCE_TOKEN
RustBuffer uniffi_lwk_fn_method_psetinput_issuance_token(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_PREVIOUS_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_PREVIOUS_SCRIPT_PUBKEY
RustBuffer uniffi_lwk_fn_method_psetinput_previous_script_pubkey(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_PREVIOUS_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_PREVIOUS_TXID
void* uniffi_lwk_fn_method_psetinput_previous_txid(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_PREVIOUS_VOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_PREVIOUS_VOUT
uint32_t uniffi_lwk_fn_method_psetinput_previous_vout(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_REDEEM_SCRIPT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETINPUT_REDEEM_SCRIPT
RustBuffer uniffi_lwk_fn_method_psetinput_redeem_script(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSETSIGNATURES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_PSETSIGNATURES
void* uniffi_lwk_fn_clone_psetsignatures(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSETSIGNATURES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_PSETSIGNATURES
void uniffi_lwk_fn_free_psetsignatures(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETSIGNATURES_HAS_SIGNATURE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETSIGNATURES_HAS_SIGNATURE
RustBuffer uniffi_lwk_fn_method_psetsignatures_has_signature(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETSIGNATURES_MISSING_SIGNATURE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_PSETSIGNATURES_MISSING_SIGNATURE
RustBuffer uniffi_lwk_fn_method_psetsignatures_missing_signature(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_RECIPIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_RECIPIENT
void* uniffi_lwk_fn_clone_recipient(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_RECIPIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_RECIPIENT
void uniffi_lwk_fn_free_recipient(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_RECIPIENT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_RECIPIENT_ADDRESS
RustBuffer uniffi_lwk_fn_method_recipient_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_RECIPIENT_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_RECIPIENT_ASSET
RustBuffer uniffi_lwk_fn_method_recipient_asset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_RECIPIENT_VALUE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_RECIPIENT_VALUE
RustBuffer uniffi_lwk_fn_method_recipient_value(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_RECIPIENT_VOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_RECIPIENT_VOUT
uint32_t uniffi_lwk_fn_method_recipient_vout(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_SCRIPT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_SCRIPT
void* uniffi_lwk_fn_clone_script(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_SCRIPT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_SCRIPT
void uniffi_lwk_fn_free_script(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SCRIPT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SCRIPT_NEW
void* uniffi_lwk_fn_constructor_script_new(RustBuffer hex, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SCRIPT_ASM
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SCRIPT_ASM
RustBuffer uniffi_lwk_fn_method_script_asm(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SCRIPT_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SCRIPT_BYTES
RustBuffer uniffi_lwk_fn_method_script_bytes(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SCRIPT_IS_PROVABLY_UNSPENDABLE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SCRIPT_IS_PROVABLY_UNSPENDABLE
int8_t uniffi_lwk_fn_method_script_is_provably_unspendable(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SCRIPT_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SCRIPT_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_script_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_SECRETKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_SECRETKEY
void* uniffi_lwk_fn_clone_secretkey(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_SECRETKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_SECRETKEY
void uniffi_lwk_fn_free_secretkey(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SECRETKEY_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SECRETKEY_FROM_BYTES
void* uniffi_lwk_fn_constructor_secretkey_from_bytes(RustBuffer bytes, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SECRETKEY_FROM_WIF
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SECRETKEY_FROM_WIF
void* uniffi_lwk_fn_constructor_secretkey_from_wif(RustBuffer wif, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SECRETKEY_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SECRETKEY_BYTES
RustBuffer uniffi_lwk_fn_method_secretkey_bytes(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SECRETKEY_SIGN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SECRETKEY_SIGN
void* uniffi_lwk_fn_method_secretkey_sign(void* ptr, void* pset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_SIGNER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_SIGNER
void* uniffi_lwk_fn_clone_signer(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_SIGNER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_SIGNER
void uniffi_lwk_fn_free_signer(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SIGNER_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SIGNER_NEW
void* uniffi_lwk_fn_constructor_signer_new(void* mnemonic, void* network, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SIGNER_RANDOM
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_SIGNER_RANDOM
void* uniffi_lwk_fn_constructor_signer_random(void* network, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_KEYORIGIN_XPUB
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_KEYORIGIN_XPUB
RustBuffer uniffi_lwk_fn_method_signer_keyorigin_xpub(void* ptr, void* bip, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_MNEMONIC
void* uniffi_lwk_fn_method_signer_mnemonic(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_SIGN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_SIGN
void* uniffi_lwk_fn_method_signer_sign(void* ptr, void* pset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_SINGLESIG_DESC
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_SINGLESIG_DESC
void* uniffi_lwk_fn_method_signer_singlesig_desc(void* ptr, RustBuffer script_variant, RustBuffer blinding_variant, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_WPKH_SLIP77_DESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_SIGNER_WPKH_SLIP77_DESCRIPTOR
void* uniffi_lwk_fn_method_signer_wpkh_slip77_descriptor(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TRANSACTION
void* uniffi_lwk_fn_clone_transaction(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TRANSACTION
void uniffi_lwk_fn_free_transaction(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_TRANSACTION_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_TRANSACTION_NEW
void* uniffi_lwk_fn_constructor_transaction_new(RustBuffer hex, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_BYTES
RustBuffer uniffi_lwk_fn_method_transaction_bytes(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_FEE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_FEE
uint64_t uniffi_lwk_fn_method_transaction_fee(void* ptr, RustBuffer policy_asset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_INPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_INPUTS
RustBuffer uniffi_lwk_fn_method_transaction_inputs(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_OUTPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_OUTPUTS
RustBuffer uniffi_lwk_fn_method_transaction_outputs(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_TXID
void* uniffi_lwk_fn_method_transaction_txid(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TRANSACTION_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_transaction_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXBUILDER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXBUILDER
void* uniffi_lwk_fn_clone_txbuilder(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXBUILDER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXBUILDER
void uniffi_lwk_fn_free_txbuilder(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_TXBUILDER_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_TXBUILDER_NEW
void* uniffi_lwk_fn_constructor_txbuilder_new(void* network, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ADD_BURN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ADD_BURN
void uniffi_lwk_fn_method_txbuilder_add_burn(void* ptr, uint64_t satoshi, RustBuffer asset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ADD_EXTERNAL_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ADD_EXTERNAL_UTXOS
void uniffi_lwk_fn_method_txbuilder_add_external_utxos(void* ptr, RustBuffer utxos, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ADD_LBTC_RECIPIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ADD_LBTC_RECIPIENT
void uniffi_lwk_fn_method_txbuilder_add_lbtc_recipient(void* ptr, void* address, uint64_t satoshi, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ADD_RECIPIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ADD_RECIPIENT
void uniffi_lwk_fn_method_txbuilder_add_recipient(void* ptr, void* address, uint64_t satoshi, RustBuffer asset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_DRAIN_LBTC_TO
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_DRAIN_LBTC_TO
void uniffi_lwk_fn_method_txbuilder_drain_lbtc_to(void* ptr, void* address, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_DRAIN_LBTC_WALLET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_DRAIN_LBTC_WALLET
void uniffi_lwk_fn_method_txbuilder_drain_lbtc_wallet(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_FEE_RATE
void uniffi_lwk_fn_method_txbuilder_fee_rate(void* ptr, RustBuffer rate, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_FINISH
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_FINISH
void* uniffi_lwk_fn_method_txbuilder_finish(void* ptr, void* wollet, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ISSUE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_ISSUE_ASSET
void uniffi_lwk_fn_method_txbuilder_issue_asset(void* ptr, uint64_t asset_sats, RustBuffer asset_receiver, uint64_t token_sats, RustBuffer token_receiver, RustBuffer contract, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_LIQUIDEX_MAKE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_LIQUIDEX_MAKE
void uniffi_lwk_fn_method_txbuilder_liquidex_make(void* ptr, void* utxo, void* address, uint64_t amount, RustBuffer asset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_LIQUIDEX_TAKE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_LIQUIDEX_TAKE
void uniffi_lwk_fn_method_txbuilder_liquidex_take(void* ptr, RustBuffer proposals, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_REISSUE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_REISSUE_ASSET
void uniffi_lwk_fn_method_txbuilder_reissue_asset(void* ptr, RustBuffer asset_to_reissue, uint64_t satoshi_to_reissue, RustBuffer asset_receiver, RustBuffer issuance_tx, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_SET_WALLET_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_SET_WALLET_UTXOS
void uniffi_lwk_fn_method_txbuilder_set_wallet_utxos(void* ptr, RustBuffer utxos, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXBUILDER_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_txbuilder_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXIN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXIN
void* uniffi_lwk_fn_clone_txin(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXIN
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXIN
void uniffi_lwk_fn_free_txin(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXIN_OUTPOINT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXIN_OUTPOINT
void* uniffi_lwk_fn_method_txin_outpoint(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXOUT
void* uniffi_lwk_fn_clone_txout(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXOUT
void uniffi_lwk_fn_free_txout(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_ASSET
RustBuffer uniffi_lwk_fn_method_txout_asset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_IS_FEE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_IS_FEE
int8_t uniffi_lwk_fn_method_txout_is_fee(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_IS_PARTIALLY_BLINDED
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_IS_PARTIALLY_BLINDED
int8_t uniffi_lwk_fn_method_txout_is_partially_blinded(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_SCRIPT_PUBKEY
void* uniffi_lwk_fn_method_txout_script_pubkey(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_UNBLIND
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_UNBLIND
void* uniffi_lwk_fn_method_txout_unblind(void* ptr, void* secret_key, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_UNCONFIDENTIAL_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_UNCONFIDENTIAL_ADDRESS
RustBuffer uniffi_lwk_fn_method_txout_unconfidential_address(void* ptr, void* network, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_VALUE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUT_VALUE
RustBuffer uniffi_lwk_fn_method_txout_value(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXOUTSECRETS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXOUTSECRETS
void* uniffi_lwk_fn_clone_txoutsecrets(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXOUTSECRETS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXOUTSECRETS
void uniffi_lwk_fn_free_txoutsecrets(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_ASSET
RustBuffer uniffi_lwk_fn_method_txoutsecrets_asset(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_ASSET_BF
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_ASSET_BF
RustBuffer uniffi_lwk_fn_method_txoutsecrets_asset_bf(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_ASSET_COMMITMENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_ASSET_COMMITMENT
RustBuffer uniffi_lwk_fn_method_txoutsecrets_asset_commitment(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_IS_EXPLICIT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_IS_EXPLICIT
int8_t uniffi_lwk_fn_method_txoutsecrets_is_explicit(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_VALUE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_VALUE
uint64_t uniffi_lwk_fn_method_txoutsecrets_value(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_VALUE_BF
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_VALUE_BF
RustBuffer uniffi_lwk_fn_method_txoutsecrets_value_bf(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_VALUE_COMMITMENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXOUTSECRETS_VALUE_COMMITMENT
RustBuffer uniffi_lwk_fn_method_txoutsecrets_value_commitment(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_TXID
void* uniffi_lwk_fn_clone_txid(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_TXID
void uniffi_lwk_fn_free_txid(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_TXID_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_TXID_NEW
void* uniffi_lwk_fn_constructor_txid_new(RustBuffer hex, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXID_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXID_BYTES
RustBuffer uniffi_lwk_fn_method_txid_bytes(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXID_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_TXID_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_txid_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_UNVALIDATEDLIQUIDEXPROPOSAL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_UNVALIDATEDLIQUIDEXPROPOSAL
void* uniffi_lwk_fn_clone_unvalidatedliquidexproposal(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_UNVALIDATEDLIQUIDEXPROPOSAL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_UNVALIDATEDLIQUIDEXPROPOSAL
void uniffi_lwk_fn_free_unvalidatedliquidexproposal(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_UNVALIDATEDLIQUIDEXPROPOSAL_FROM_PSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_UNVALIDATEDLIQUIDEXPROPOSAL_FROM_PSET
void* uniffi_lwk_fn_constructor_unvalidatedliquidexproposal_from_pset(void* pset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_UNVALIDATEDLIQUIDEXPROPOSAL_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_UNVALIDATEDLIQUIDEXPROPOSAL_NEW
void* uniffi_lwk_fn_constructor_unvalidatedliquidexproposal_new(RustBuffer s, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_INSECURE_VALIDATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_INSECURE_VALIDATE
void* uniffi_lwk_fn_method_unvalidatedliquidexproposal_insecure_validate(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_NEEDED_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_NEEDED_TX
void* uniffi_lwk_fn_method_unvalidatedliquidexproposal_needed_tx(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_VALIDATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_VALIDATE
void* uniffi_lwk_fn_method_unvalidatedliquidexproposal_validate(void* ptr, void* previous_tx, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_unvalidatedliquidexproposal_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_UPDATE
void* uniffi_lwk_fn_clone_update(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_UPDATE
void uniffi_lwk_fn_free_update(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_UPDATE_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_UPDATE_NEW
void* uniffi_lwk_fn_constructor_update_new(RustBuffer bytes, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UPDATE_ONLY_TIP
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UPDATE_ONLY_TIP
int8_t uniffi_lwk_fn_method_update_only_tip(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UPDATE_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_UPDATE_SERIALIZE
RustBuffer uniffi_lwk_fn_method_update_serialize(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_VALIDATEDLIQUIDEXPROPOSAL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_VALIDATEDLIQUIDEXPROPOSAL
void* uniffi_lwk_fn_clone_validatedliquidexproposal(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_VALIDATEDLIQUIDEXPROPOSAL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_VALIDATEDLIQUIDEXPROPOSAL
void uniffi_lwk_fn_free_validatedliquidexproposal(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_VALIDATEDLIQUIDEXPROPOSAL_INPUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_VALIDATEDLIQUIDEXPROPOSAL_INPUT
void* uniffi_lwk_fn_method_validatedliquidexproposal_input(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_VALIDATEDLIQUIDEXPROPOSAL_OUTPUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_VALIDATEDLIQUIDEXPROPOSAL_OUTPUT
void* uniffi_lwk_fn_method_validatedliquidexproposal_output(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_VALIDATEDLIQUIDEXPROPOSAL_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_VALIDATEDLIQUIDEXPROPOSAL_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_validatedliquidexproposal_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_WALLETTX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_WALLETTX
void* uniffi_lwk_fn_clone_wallettx(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_WALLETTX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_WALLETTX
void uniffi_lwk_fn_free_wallettx(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_BALANCE
RustBuffer uniffi_lwk_fn_method_wallettx_balance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_FEE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_FEE
uint64_t uniffi_lwk_fn_method_wallettx_fee(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_HEIGHT
RustBuffer uniffi_lwk_fn_method_wallettx_height(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_INPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_INPUTS
RustBuffer uniffi_lwk_fn_method_wallettx_inputs(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_OUTPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_OUTPUTS
RustBuffer uniffi_lwk_fn_method_wallettx_outputs(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_TIMESTAMP
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_TIMESTAMP
RustBuffer uniffi_lwk_fn_method_wallettx_timestamp(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_TX
void* uniffi_lwk_fn_method_wallettx_tx(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_TXID
void* uniffi_lwk_fn_method_wallettx_txid(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_TYPE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_TYPE
RustBuffer uniffi_lwk_fn_method_wallettx_type_(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_UNBLINDED_URL
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTX_UNBLINDED_URL
RustBuffer uniffi_lwk_fn_method_wallettx_unblinded_url(void* ptr, RustBuffer explorer_url, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_WALLETTXOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_WALLETTXOUT
void* uniffi_lwk_fn_clone_wallettxout(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_WALLETTXOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_WALLETTXOUT
void uniffi_lwk_fn_free_wallettxout(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_ADDRESS
void* uniffi_lwk_fn_method_wallettxout_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_EXT_INT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_EXT_INT
RustBuffer uniffi_lwk_fn_method_wallettxout_ext_int(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_HEIGHT
RustBuffer uniffi_lwk_fn_method_wallettxout_height(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_OUTPOINT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_OUTPOINT
void* uniffi_lwk_fn_method_wallettxout_outpoint(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_SCRIPT_PUBKEY
void* uniffi_lwk_fn_method_wallettxout_script_pubkey(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_UNBLINDED
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_UNBLINDED
void* uniffi_lwk_fn_method_wallettxout_unblinded(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_WILDCARD_INDEX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WALLETTXOUT_WILDCARD_INDEX
uint32_t uniffi_lwk_fn_method_wallettxout_wildcard_index(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_WOLLET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_WOLLET
void* uniffi_lwk_fn_clone_wollet(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_WOLLET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_WOLLET
void uniffi_lwk_fn_free_wollet(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_WOLLET_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_WOLLET_NEW
void* uniffi_lwk_fn_constructor_wollet_new(void* network, void* descriptor, RustBuffer datadir, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_WOLLET_WITH_CUSTOM_PERSISTER
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_WOLLET_WITH_CUSTOM_PERSISTER
void* uniffi_lwk_fn_constructor_wollet_with_custom_persister(void* network, void* descriptor, void* persister, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_ADD_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_ADD_DETAILS
void* uniffi_lwk_fn_method_wollet_add_details(void* ptr, void* pset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_ADDRESS
void* uniffi_lwk_fn_method_wollet_address(void* ptr, RustBuffer index, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_APPLY_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_APPLY_TRANSACTION
void uniffi_lwk_fn_method_wollet_apply_transaction(void* ptr, void* tip, void* tx, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_APPLY_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_APPLY_UPDATE
void uniffi_lwk_fn_method_wollet_apply_update(void* ptr, void* update, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_BALANCE
RustBuffer uniffi_lwk_fn_method_wollet_balance(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_DESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_DESCRIPTOR
void* uniffi_lwk_fn_method_wollet_descriptor(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_EXTRACT_WALLET_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_EXTRACT_WALLET_UTXOS
RustBuffer uniffi_lwk_fn_method_wollet_extract_wallet_utxos(void* ptr, void* pset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_FINALIZE
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_FINALIZE
void* uniffi_lwk_fn_method_wollet_finalize(void* ptr, void* pset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_IS_SEGWIT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_IS_SEGWIT
int8_t uniffi_lwk_fn_method_wollet_is_segwit(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_MAX_WEIGHT_TO_SATISFY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_MAX_WEIGHT_TO_SATISFY
uint32_t uniffi_lwk_fn_method_wollet_max_weight_to_satisfy(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_PSET_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_PSET_DETAILS
void* uniffi_lwk_fn_method_wollet_pset_details(void* ptr, void* pset, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_TRANSACTIONS
RustBuffer uniffi_lwk_fn_method_wollet_transactions(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_TRANSACTIONS_PAGINATED
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_TRANSACTIONS_PAGINATED
RustBuffer uniffi_lwk_fn_method_wollet_transactions_paginated(void* ptr, uint32_t offset, uint32_t limit, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_TXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_TXOS
RustBuffer uniffi_lwk_fn_method_wollet_txos(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_UNBLIND_UTXOS_WITH
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_UNBLIND_UTXOS_WITH
RustBuffer uniffi_lwk_fn_method_wollet_unblind_utxos_with(void* ptr, void* blinding_privkey, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_UTXOS
RustBuffer uniffi_lwk_fn_method_wollet_utxos(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_WAIT_FOR_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLET_WAIT_FOR_TX
void* uniffi_lwk_fn_method_wollet_wait_for_tx(void* ptr, void* txid, void* client, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_WOLLETDESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CLONE_WOLLETDESCRIPTOR
void* uniffi_lwk_fn_clone_wolletdescriptor(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_WOLLETDESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FREE_WOLLETDESCRIPTOR
void uniffi_lwk_fn_free_wolletdescriptor(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_WOLLETDESCRIPTOR_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_CONSTRUCTOR_WOLLETDESCRIPTOR_NEW
void* uniffi_lwk_fn_constructor_wolletdescriptor_new(RustBuffer descriptor, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLETDESCRIPTOR_DERIVE_BLINDING_KEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLETDESCRIPTOR_DERIVE_BLINDING_KEY
RustBuffer uniffi_lwk_fn_method_wolletdescriptor_derive_blinding_key(void* ptr, void* script_pubkey, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLETDESCRIPTOR_IS_MAINNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLETDESCRIPTOR_IS_MAINNET
int8_t uniffi_lwk_fn_method_wolletdescriptor_is_mainnet(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLETDESCRIPTOR_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLETDESCRIPTOR_SCRIPT_PUBKEY
void* uniffi_lwk_fn_method_wolletdescriptor_script_pubkey(void* ptr, RustBuffer ext_int, uint32_t index, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLETDESCRIPTOR_UNIFFI_TRAIT_DISPLAY
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_METHOD_WOLLETDESCRIPTOR_UNIFFI_TRAIT_DISPLAY
RustBuffer uniffi_lwk_fn_method_wolletdescriptor_uniffi_trait_display(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_FN_FUNC_IS_PROVABLY_SEGWIT
#define UNIFFI_FFIDEF_UNIFFI_LWK_FN_FUNC_IS_PROVABLY_SEGWIT
int8_t uniffi_lwk_fn_func_is_provably_segwit(void* script_pubkey, RustBuffer redeem_script, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_LWK_RUSTBUFFER_ALLOC
RustBuffer ffi_lwk_rustbuffer_alloc(uint64_t size, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_LWK_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_lwk_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_LWK_RUSTBUFFER_FREE
void ffi_lwk_rustbuffer_free(RustBuffer buf, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_LWK_RUSTBUFFER_RESERVE
RustBuffer ffi_lwk_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_U8
void ffi_lwk_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_U8
void ffi_lwk_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_U8
void ffi_lwk_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_lwk_rust_future_complete_u8(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_I8
void ffi_lwk_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_I8
void ffi_lwk_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_I8
void ffi_lwk_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_I8
int8_t ffi_lwk_rust_future_complete_i8(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_U16
void ffi_lwk_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_U16
void ffi_lwk_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_U16
void ffi_lwk_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_lwk_rust_future_complete_u16(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_I16
void ffi_lwk_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_I16
void ffi_lwk_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_I16
void ffi_lwk_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_I16
int16_t ffi_lwk_rust_future_complete_i16(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_U32
void ffi_lwk_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_U32
void ffi_lwk_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_U32
void ffi_lwk_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_lwk_rust_future_complete_u32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_I32
void ffi_lwk_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_I32
void ffi_lwk_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_I32
void ffi_lwk_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_I32
int32_t ffi_lwk_rust_future_complete_i32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_U64
void ffi_lwk_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_U64
void ffi_lwk_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_U64
void ffi_lwk_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_lwk_rust_future_complete_u64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_I64
void ffi_lwk_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_I64
void ffi_lwk_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_I64
void ffi_lwk_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_I64
int64_t ffi_lwk_rust_future_complete_i64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_F32
void ffi_lwk_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_F32
void ffi_lwk_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_F32
void ffi_lwk_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_F32
float ffi_lwk_rust_future_complete_f32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_F64
void ffi_lwk_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_F64
void ffi_lwk_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_F64
void ffi_lwk_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_F64
double ffi_lwk_rust_future_complete_f64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_POINTER
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_POINTER
void ffi_lwk_rust_future_poll_pointer(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_POINTER
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_POINTER
void ffi_lwk_rust_future_cancel_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_POINTER
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_POINTER
void ffi_lwk_rust_future_free_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_POINTER
void* ffi_lwk_rust_future_complete_pointer(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_lwk_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_lwk_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_lwk_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_lwk_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_POLL_VOID
void ffi_lwk_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_CANCEL_VOID
void ffi_lwk_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_FREE_VOID
void ffi_lwk_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_LWK_RUST_FUTURE_COMPLETE_VOID
void ffi_lwk_rust_future_complete_void(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_FUNC_IS_PROVABLY_SEGWIT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_FUNC_IS_PROVABLY_SEGWIT
uint16_t uniffi_lwk_checksum_func_is_provably_segwit(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_IS_BLINDED
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_IS_BLINDED
uint16_t uniffi_lwk_checksum_method_address_is_blinded(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_QR_CODE_TEXT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_QR_CODE_TEXT
uint16_t uniffi_lwk_checksum_method_address_qr_code_text(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_QR_CODE_URI
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_QR_CODE_URI
uint16_t uniffi_lwk_checksum_method_address_qr_code_uri(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_SCRIPT_PUBKEY
uint16_t uniffi_lwk_checksum_method_address_script_pubkey(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_TO_UNCONFIDENTIAL
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESS_TO_UNCONFIDENTIAL
uint16_t uniffi_lwk_checksum_method_address_to_unconfidential(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESSRESULT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESSRESULT_ADDRESS
uint16_t uniffi_lwk_checksum_method_addressresult_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESSRESULT_INDEX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ADDRESSRESULT_INDEX
uint16_t uniffi_lwk_checksum_method_addressresult_index(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_AMP2_COSIGN
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_AMP2_COSIGN
uint16_t uniffi_lwk_checksum_method_amp2_cosign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_AMP2_DESCRIPTOR_FROM_STR
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_AMP2_DESCRIPTOR_FROM_STR
uint16_t uniffi_lwk_checksum_method_amp2_descriptor_from_str(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_AMP2_REGISTER
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_AMP2_REGISTER
uint16_t uniffi_lwk_checksum_method_amp2_register(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_AMP2DESCRIPTOR_DESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_AMP2DESCRIPTOR_DESCRIPTOR
uint16_t uniffi_lwk_checksum_method_amp2descriptor_descriptor(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ASSETAMOUNT_AMOUNT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ASSETAMOUNT_AMOUNT
uint16_t uniffi_lwk_checksum_method_assetamount_amount(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ASSETAMOUNT_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ASSETAMOUNT_ASSET
uint16_t uniffi_lwk_checksum_method_assetamount_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_BLOCK_HASH
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_BLOCK_HASH
uint16_t uniffi_lwk_checksum_method_blockheader_block_hash(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_HEIGHT
uint16_t uniffi_lwk_checksum_method_blockheader_height(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_MERKLE_ROOT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_MERKLE_ROOT
uint16_t uniffi_lwk_checksum_method_blockheader_merkle_root(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_PREV_BLOCKHASH
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_PREV_BLOCKHASH
uint16_t uniffi_lwk_checksum_method_blockheader_prev_blockhash(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_TIME
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_TIME
uint16_t uniffi_lwk_checksum_method_blockheader_time(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_VERSION
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_BLOCKHEADER_VERSION
uint16_t uniffi_lwk_checksum_method_blockheader_version(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_BROADCAST
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_BROADCAST
uint16_t uniffi_lwk_checksum_method_electrumclient_broadcast(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_FULL_SCAN
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_FULL_SCAN
uint16_t uniffi_lwk_checksum_method_electrumclient_full_scan(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_FULL_SCAN_TO_INDEX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_FULL_SCAN_TO_INDEX
uint16_t uniffi_lwk_checksum_method_electrumclient_full_scan_to_index(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_GET_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_GET_TX
uint16_t uniffi_lwk_checksum_method_electrumclient_get_tx(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_PING
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_PING
uint16_t uniffi_lwk_checksum_method_electrumclient_ping(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_TIP
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ELECTRUMCLIENT_TIP
uint16_t uniffi_lwk_checksum_method_electrumclient_tip(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ESPLORACLIENT_BROADCAST
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ESPLORACLIENT_BROADCAST
uint16_t uniffi_lwk_checksum_method_esploraclient_broadcast(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ESPLORACLIENT_FULL_SCAN
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ESPLORACLIENT_FULL_SCAN
uint16_t uniffi_lwk_checksum_method_esploraclient_full_scan(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ESPLORACLIENT_FULL_SCAN_TO_INDEX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ESPLORACLIENT_FULL_SCAN_TO_INDEX
uint16_t uniffi_lwk_checksum_method_esploraclient_full_scan_to_index(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ESPLORACLIENT_TIP
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ESPLORACLIENT_TIP
uint16_t uniffi_lwk_checksum_method_esploraclient_tip(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_FOREIGNPERSISTER_GET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_FOREIGNPERSISTER_GET
uint16_t uniffi_lwk_checksum_method_foreignpersister_get(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_FOREIGNPERSISTER_PUSH
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_FOREIGNPERSISTER_PUSH
uint16_t uniffi_lwk_checksum_method_foreignpersister_push(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_ASSET
uint16_t uniffi_lwk_checksum_method_issuance_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_ASSET_SATOSHI
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_ASSET_SATOSHI
uint16_t uniffi_lwk_checksum_method_issuance_asset_satoshi(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_IS_CONFIDENTIAL
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_IS_CONFIDENTIAL
uint16_t uniffi_lwk_checksum_method_issuance_is_confidential(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_IS_ISSUANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_IS_ISSUANCE
uint16_t uniffi_lwk_checksum_method_issuance_is_issuance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_IS_NULL
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_IS_NULL
uint16_t uniffi_lwk_checksum_method_issuance_is_null(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_IS_REISSUANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_IS_REISSUANCE
uint16_t uniffi_lwk_checksum_method_issuance_is_reissuance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_PREV_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_PREV_TXID
uint16_t uniffi_lwk_checksum_method_issuance_prev_txid(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_PREV_VOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_PREV_VOUT
uint16_t uniffi_lwk_checksum_method_issuance_prev_vout(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_TOKEN
uint16_t uniffi_lwk_checksum_method_issuance_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_TOKEN_SATOSHI
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_ISSUANCE_TOKEN_SATOSHI
uint16_t uniffi_lwk_checksum_method_issuance_token_satoshi(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_ELECTRUM_URL
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_ELECTRUM_URL
uint16_t uniffi_lwk_checksum_method_lwktestenv_electrum_url(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_GENERATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_GENERATE
uint16_t uniffi_lwk_checksum_method_lwktestenv_generate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_GET_NEW_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_GET_NEW_ADDRESS
uint16_t uniffi_lwk_checksum_method_lwktestenv_get_new_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_HEIGHT
uint16_t uniffi_lwk_checksum_method_lwktestenv_height(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_ISSUE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_ISSUE_ASSET
uint16_t uniffi_lwk_checksum_method_lwktestenv_issue_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_SEND_TO_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_LWKTESTENV_SEND_TO_ADDRESS
uint16_t uniffi_lwk_checksum_method_lwktestenv_send_to_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_DEFAULT_ELECTRUM_CLIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_DEFAULT_ELECTRUM_CLIENT
uint16_t uniffi_lwk_checksum_method_network_default_electrum_client(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_DEFAULT_ESPLORA_CLIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_DEFAULT_ESPLORA_CLIENT
uint16_t uniffi_lwk_checksum_method_network_default_esplora_client(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_IS_MAINNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_IS_MAINNET
uint16_t uniffi_lwk_checksum_method_network_is_mainnet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_POLICY_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_POLICY_ASSET
uint16_t uniffi_lwk_checksum_method_network_policy_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_TX_BUILDER
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_NETWORK_TX_BUILDER
uint16_t uniffi_lwk_checksum_method_network_tx_builder(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_OUTPOINT_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_OUTPOINT_TXID
uint16_t uniffi_lwk_checksum_method_outpoint_txid(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_OUTPOINT_VOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_OUTPOINT_VOUT
uint16_t uniffi_lwk_checksum_method_outpoint_vout(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PRECISION_SATS_TO_STRING
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PRECISION_SATS_TO_STRING
uint16_t uniffi_lwk_checksum_method_precision_sats_to_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PRECISION_STRING_TO_SATS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PRECISION_STRING_TO_SATS
uint16_t uniffi_lwk_checksum_method_precision_string_to_sats(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_COMBINE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_COMBINE
uint16_t uniffi_lwk_checksum_method_pset_combine(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_EXTRACT_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_EXTRACT_TX
uint16_t uniffi_lwk_checksum_method_pset_extract_tx(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_FINALIZE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_FINALIZE
uint16_t uniffi_lwk_checksum_method_pset_finalize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_INPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_INPUTS
uint16_t uniffi_lwk_checksum_method_pset_inputs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_UNIQUE_ID
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSET_UNIQUE_ID
uint16_t uniffi_lwk_checksum_method_pset_unique_id(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETBALANCE_BALANCES
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETBALANCE_BALANCES
uint16_t uniffi_lwk_checksum_method_psetbalance_balances(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETBALANCE_FEE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETBALANCE_FEE
uint16_t uniffi_lwk_checksum_method_psetbalance_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETBALANCE_RECIPIENTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETBALANCE_RECIPIENTS
uint16_t uniffi_lwk_checksum_method_psetbalance_recipients(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETDETAILS_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETDETAILS_BALANCE
uint16_t uniffi_lwk_checksum_method_psetdetails_balance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETDETAILS_INPUTS_ISSUANCES
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETDETAILS_INPUTS_ISSUANCES
uint16_t uniffi_lwk_checksum_method_psetdetails_inputs_issuances(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETDETAILS_SIGNATURES
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETDETAILS_SIGNATURES
uint16_t uniffi_lwk_checksum_method_psetdetails_signatures(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_ISSUANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_ISSUANCE
uint16_t uniffi_lwk_checksum_method_psetinput_issuance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_ISSUANCE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_ISSUANCE_ASSET
uint16_t uniffi_lwk_checksum_method_psetinput_issuance_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_ISSUANCE_TOKEN
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_ISSUANCE_TOKEN
uint16_t uniffi_lwk_checksum_method_psetinput_issuance_token(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_PREVIOUS_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_PREVIOUS_SCRIPT_PUBKEY
uint16_t uniffi_lwk_checksum_method_psetinput_previous_script_pubkey(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_PREVIOUS_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_PREVIOUS_TXID
uint16_t uniffi_lwk_checksum_method_psetinput_previous_txid(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_PREVIOUS_VOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_PREVIOUS_VOUT
uint16_t uniffi_lwk_checksum_method_psetinput_previous_vout(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_REDEEM_SCRIPT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETINPUT_REDEEM_SCRIPT
uint16_t uniffi_lwk_checksum_method_psetinput_redeem_script(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETSIGNATURES_HAS_SIGNATURE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETSIGNATURES_HAS_SIGNATURE
uint16_t uniffi_lwk_checksum_method_psetsignatures_has_signature(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETSIGNATURES_MISSING_SIGNATURE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_PSETSIGNATURES_MISSING_SIGNATURE
uint16_t uniffi_lwk_checksum_method_psetsignatures_missing_signature(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_RECIPIENT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_RECIPIENT_ADDRESS
uint16_t uniffi_lwk_checksum_method_recipient_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_RECIPIENT_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_RECIPIENT_ASSET
uint16_t uniffi_lwk_checksum_method_recipient_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_RECIPIENT_VALUE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_RECIPIENT_VALUE
uint16_t uniffi_lwk_checksum_method_recipient_value(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_RECIPIENT_VOUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_RECIPIENT_VOUT
uint16_t uniffi_lwk_checksum_method_recipient_vout(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SCRIPT_ASM
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SCRIPT_ASM
uint16_t uniffi_lwk_checksum_method_script_asm(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SCRIPT_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SCRIPT_BYTES
uint16_t uniffi_lwk_checksum_method_script_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SCRIPT_IS_PROVABLY_UNSPENDABLE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SCRIPT_IS_PROVABLY_UNSPENDABLE
uint16_t uniffi_lwk_checksum_method_script_is_provably_unspendable(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SECRETKEY_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SECRETKEY_BYTES
uint16_t uniffi_lwk_checksum_method_secretkey_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SECRETKEY_SIGN
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SECRETKEY_SIGN
uint16_t uniffi_lwk_checksum_method_secretkey_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_KEYORIGIN_XPUB
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_KEYORIGIN_XPUB
uint16_t uniffi_lwk_checksum_method_signer_keyorigin_xpub(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_MNEMONIC
uint16_t uniffi_lwk_checksum_method_signer_mnemonic(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_SIGN
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_SIGN
uint16_t uniffi_lwk_checksum_method_signer_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_SINGLESIG_DESC
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_SINGLESIG_DESC
uint16_t uniffi_lwk_checksum_method_signer_singlesig_desc(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_WPKH_SLIP77_DESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_SIGNER_WPKH_SLIP77_DESCRIPTOR
uint16_t uniffi_lwk_checksum_method_signer_wpkh_slip77_descriptor(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_BYTES
uint16_t uniffi_lwk_checksum_method_transaction_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_FEE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_FEE
uint16_t uniffi_lwk_checksum_method_transaction_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_INPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_INPUTS
uint16_t uniffi_lwk_checksum_method_transaction_inputs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_OUTPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_OUTPUTS
uint16_t uniffi_lwk_checksum_method_transaction_outputs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TRANSACTION_TXID
uint16_t uniffi_lwk_checksum_method_transaction_txid(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ADD_BURN
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ADD_BURN
uint16_t uniffi_lwk_checksum_method_txbuilder_add_burn(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ADD_EXTERNAL_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ADD_EXTERNAL_UTXOS
uint16_t uniffi_lwk_checksum_method_txbuilder_add_external_utxos(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ADD_LBTC_RECIPIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ADD_LBTC_RECIPIENT
uint16_t uniffi_lwk_checksum_method_txbuilder_add_lbtc_recipient(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ADD_RECIPIENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ADD_RECIPIENT
uint16_t uniffi_lwk_checksum_method_txbuilder_add_recipient(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_DRAIN_LBTC_TO
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_DRAIN_LBTC_TO
uint16_t uniffi_lwk_checksum_method_txbuilder_drain_lbtc_to(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_DRAIN_LBTC_WALLET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_DRAIN_LBTC_WALLET
uint16_t uniffi_lwk_checksum_method_txbuilder_drain_lbtc_wallet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_FEE_RATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_FEE_RATE
uint16_t uniffi_lwk_checksum_method_txbuilder_fee_rate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_FINISH
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_FINISH
uint16_t uniffi_lwk_checksum_method_txbuilder_finish(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ISSUE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_ISSUE_ASSET
uint16_t uniffi_lwk_checksum_method_txbuilder_issue_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_LIQUIDEX_MAKE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_LIQUIDEX_MAKE
uint16_t uniffi_lwk_checksum_method_txbuilder_liquidex_make(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_LIQUIDEX_TAKE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_LIQUIDEX_TAKE
uint16_t uniffi_lwk_checksum_method_txbuilder_liquidex_take(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_REISSUE_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_REISSUE_ASSET
uint16_t uniffi_lwk_checksum_method_txbuilder_reissue_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_SET_WALLET_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXBUILDER_SET_WALLET_UTXOS
uint16_t uniffi_lwk_checksum_method_txbuilder_set_wallet_utxos(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXIN_OUTPOINT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXIN_OUTPOINT
uint16_t uniffi_lwk_checksum_method_txin_outpoint(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_ASSET
uint16_t uniffi_lwk_checksum_method_txout_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_IS_FEE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_IS_FEE
uint16_t uniffi_lwk_checksum_method_txout_is_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_IS_PARTIALLY_BLINDED
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_IS_PARTIALLY_BLINDED
uint16_t uniffi_lwk_checksum_method_txout_is_partially_blinded(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_SCRIPT_PUBKEY
uint16_t uniffi_lwk_checksum_method_txout_script_pubkey(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_UNBLIND
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_UNBLIND
uint16_t uniffi_lwk_checksum_method_txout_unblind(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_UNCONFIDENTIAL_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_UNCONFIDENTIAL_ADDRESS
uint16_t uniffi_lwk_checksum_method_txout_unconfidential_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_VALUE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUT_VALUE
uint16_t uniffi_lwk_checksum_method_txout_value(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_ASSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_ASSET
uint16_t uniffi_lwk_checksum_method_txoutsecrets_asset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_ASSET_BF
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_ASSET_BF
uint16_t uniffi_lwk_checksum_method_txoutsecrets_asset_bf(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_ASSET_COMMITMENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_ASSET_COMMITMENT
uint16_t uniffi_lwk_checksum_method_txoutsecrets_asset_commitment(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_IS_EXPLICIT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_IS_EXPLICIT
uint16_t uniffi_lwk_checksum_method_txoutsecrets_is_explicit(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_VALUE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_VALUE
uint16_t uniffi_lwk_checksum_method_txoutsecrets_value(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_VALUE_BF
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_VALUE_BF
uint16_t uniffi_lwk_checksum_method_txoutsecrets_value_bf(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_VALUE_COMMITMENT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXOUTSECRETS_VALUE_COMMITMENT
uint16_t uniffi_lwk_checksum_method_txoutsecrets_value_commitment(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXID_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_TXID_BYTES
uint16_t uniffi_lwk_checksum_method_txid_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_INSECURE_VALIDATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_INSECURE_VALIDATE
uint16_t uniffi_lwk_checksum_method_unvalidatedliquidexproposal_insecure_validate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_NEEDED_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_NEEDED_TX
uint16_t uniffi_lwk_checksum_method_unvalidatedliquidexproposal_needed_tx(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_VALIDATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UNVALIDATEDLIQUIDEXPROPOSAL_VALIDATE
uint16_t uniffi_lwk_checksum_method_unvalidatedliquidexproposal_validate(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UPDATE_ONLY_TIP
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UPDATE_ONLY_TIP
uint16_t uniffi_lwk_checksum_method_update_only_tip(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UPDATE_SERIALIZE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_UPDATE_SERIALIZE
uint16_t uniffi_lwk_checksum_method_update_serialize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_VALIDATEDLIQUIDEXPROPOSAL_INPUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_VALIDATEDLIQUIDEXPROPOSAL_INPUT
uint16_t uniffi_lwk_checksum_method_validatedliquidexproposal_input(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_VALIDATEDLIQUIDEXPROPOSAL_OUTPUT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_VALIDATEDLIQUIDEXPROPOSAL_OUTPUT
uint16_t uniffi_lwk_checksum_method_validatedliquidexproposal_output(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_BALANCE
uint16_t uniffi_lwk_checksum_method_wallettx_balance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_FEE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_FEE
uint16_t uniffi_lwk_checksum_method_wallettx_fee(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_HEIGHT
uint16_t uniffi_lwk_checksum_method_wallettx_height(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_INPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_INPUTS
uint16_t uniffi_lwk_checksum_method_wallettx_inputs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_OUTPUTS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_OUTPUTS
uint16_t uniffi_lwk_checksum_method_wallettx_outputs(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_TIMESTAMP
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_TIMESTAMP
uint16_t uniffi_lwk_checksum_method_wallettx_timestamp(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_TX
uint16_t uniffi_lwk_checksum_method_wallettx_tx(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_TXID
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_TXID
uint16_t uniffi_lwk_checksum_method_wallettx_txid(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_TYPE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_TYPE
uint16_t uniffi_lwk_checksum_method_wallettx_type_(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_UNBLINDED_URL
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTX_UNBLINDED_URL
uint16_t uniffi_lwk_checksum_method_wallettx_unblinded_url(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_ADDRESS
uint16_t uniffi_lwk_checksum_method_wallettxout_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_EXT_INT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_EXT_INT
uint16_t uniffi_lwk_checksum_method_wallettxout_ext_int(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_HEIGHT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_HEIGHT
uint16_t uniffi_lwk_checksum_method_wallettxout_height(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_OUTPOINT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_OUTPOINT
uint16_t uniffi_lwk_checksum_method_wallettxout_outpoint(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_SCRIPT_PUBKEY
uint16_t uniffi_lwk_checksum_method_wallettxout_script_pubkey(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_UNBLINDED
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_UNBLINDED
uint16_t uniffi_lwk_checksum_method_wallettxout_unblinded(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_WILDCARD_INDEX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WALLETTXOUT_WILDCARD_INDEX
uint16_t uniffi_lwk_checksum_method_wallettxout_wildcard_index(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_ADD_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_ADD_DETAILS
uint16_t uniffi_lwk_checksum_method_wollet_add_details(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_ADDRESS
uint16_t uniffi_lwk_checksum_method_wollet_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_APPLY_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_APPLY_TRANSACTION
uint16_t uniffi_lwk_checksum_method_wollet_apply_transaction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_APPLY_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_APPLY_UPDATE
uint16_t uniffi_lwk_checksum_method_wollet_apply_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_BALANCE
uint16_t uniffi_lwk_checksum_method_wollet_balance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_DESCRIPTOR
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_DESCRIPTOR
uint16_t uniffi_lwk_checksum_method_wollet_descriptor(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_EXTRACT_WALLET_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_EXTRACT_WALLET_UTXOS
uint16_t uniffi_lwk_checksum_method_wollet_extract_wallet_utxos(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_FINALIZE
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_FINALIZE
uint16_t uniffi_lwk_checksum_method_wollet_finalize(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_IS_SEGWIT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_IS_SEGWIT
uint16_t uniffi_lwk_checksum_method_wollet_is_segwit(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_MAX_WEIGHT_TO_SATISFY
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_MAX_WEIGHT_TO_SATISFY
uint16_t uniffi_lwk_checksum_method_wollet_max_weight_to_satisfy(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_PSET_DETAILS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_PSET_DETAILS
uint16_t uniffi_lwk_checksum_method_wollet_pset_details(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_TRANSACTIONS
uint16_t uniffi_lwk_checksum_method_wollet_transactions(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_TRANSACTIONS_PAGINATED
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_TRANSACTIONS_PAGINATED
uint16_t uniffi_lwk_checksum_method_wollet_transactions_paginated(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_TXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_TXOS
uint16_t uniffi_lwk_checksum_method_wollet_txos(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_UNBLIND_UTXOS_WITH
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_UNBLIND_UTXOS_WITH
uint16_t uniffi_lwk_checksum_method_wollet_unblind_utxos_with(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_UTXOS
uint16_t uniffi_lwk_checksum_method_wollet_utxos(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_WAIT_FOR_TX
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLET_WAIT_FOR_TX
uint16_t uniffi_lwk_checksum_method_wollet_wait_for_tx(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLETDESCRIPTOR_DERIVE_BLINDING_KEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLETDESCRIPTOR_DERIVE_BLINDING_KEY
uint16_t uniffi_lwk_checksum_method_wolletdescriptor_derive_blinding_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLETDESCRIPTOR_IS_MAINNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLETDESCRIPTOR_IS_MAINNET
uint16_t uniffi_lwk_checksum_method_wolletdescriptor_is_mainnet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLETDESCRIPTOR_SCRIPT_PUBKEY
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_METHOD_WOLLETDESCRIPTOR_SCRIPT_PUBKEY
uint16_t uniffi_lwk_checksum_method_wolletdescriptor_script_pubkey(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ADDRESS_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ADDRESS_NEW
uint16_t uniffi_lwk_checksum_constructor_address_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_AMP2_NEW_TESTNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_AMP2_NEW_TESTNET
uint16_t uniffi_lwk_checksum_constructor_amp2_new_testnet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_BIP_NEW_BIP49
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_BIP_NEW_BIP49
uint16_t uniffi_lwk_checksum_constructor_bip_new_bip49(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_BIP_NEW_BIP84
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_BIP_NEW_BIP84
uint16_t uniffi_lwk_checksum_constructor_bip_new_bip84(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_BIP_NEW_BIP87
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_BIP_NEW_BIP87
uint16_t uniffi_lwk_checksum_constructor_bip_new_bip87(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_CONTRACT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_CONTRACT_NEW
uint16_t uniffi_lwk_checksum_constructor_contract_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ELECTRUMCLIENT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ELECTRUMCLIENT_NEW
uint16_t uniffi_lwk_checksum_constructor_electrumclient_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ESPLORACLIENT_FROM_BUILDER
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ESPLORACLIENT_FROM_BUILDER
uint16_t uniffi_lwk_checksum_constructor_esploraclient_from_builder(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ESPLORACLIENT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ESPLORACLIENT_NEW
uint16_t uniffi_lwk_checksum_constructor_esploraclient_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ESPLORACLIENT_NEW_WATERFALLS
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_ESPLORACLIENT_NEW_WATERFALLS
uint16_t uniffi_lwk_checksum_constructor_esploraclient_new_waterfalls(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_EXTERNALUTXO_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_EXTERNALUTXO_NEW
uint16_t uniffi_lwk_checksum_constructor_externalutxo_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_FOREIGNPERSISTERLINK_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_FOREIGNPERSISTERLINK_NEW
uint16_t uniffi_lwk_checksum_constructor_foreignpersisterlink_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_LWKTESTENV_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_LWKTESTENV_NEW
uint16_t uniffi_lwk_checksum_constructor_lwktestenv_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_MNEMONIC_FROM_ENTROPY
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_MNEMONIC_FROM_ENTROPY
uint16_t uniffi_lwk_checksum_constructor_mnemonic_from_entropy(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_MNEMONIC_FROM_RANDOM
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_MNEMONIC_FROM_RANDOM
uint16_t uniffi_lwk_checksum_constructor_mnemonic_from_random(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_MNEMONIC_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_MNEMONIC_NEW
uint16_t uniffi_lwk_checksum_constructor_mnemonic_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_NETWORK_MAINNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_NETWORK_MAINNET
uint16_t uniffi_lwk_checksum_constructor_network_mainnet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_NETWORK_REGTEST
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_NETWORK_REGTEST
uint16_t uniffi_lwk_checksum_constructor_network_regtest(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_NETWORK_REGTEST_DEFAULT
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_NETWORK_REGTEST_DEFAULT
uint16_t uniffi_lwk_checksum_constructor_network_regtest_default(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_NETWORK_TESTNET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_NETWORK_TESTNET
uint16_t uniffi_lwk_checksum_constructor_network_testnet(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_OUTPOINT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_OUTPOINT_NEW
uint16_t uniffi_lwk_checksum_constructor_outpoint_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_PRECISION_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_PRECISION_NEW
uint16_t uniffi_lwk_checksum_constructor_precision_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_PSET_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_PSET_NEW
uint16_t uniffi_lwk_checksum_constructor_pset_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SCRIPT_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SCRIPT_NEW
uint16_t uniffi_lwk_checksum_constructor_script_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SECRETKEY_FROM_BYTES
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SECRETKEY_FROM_BYTES
uint16_t uniffi_lwk_checksum_constructor_secretkey_from_bytes(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SECRETKEY_FROM_WIF
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SECRETKEY_FROM_WIF
uint16_t uniffi_lwk_checksum_constructor_secretkey_from_wif(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SIGNER_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SIGNER_NEW
uint16_t uniffi_lwk_checksum_constructor_signer_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SIGNER_RANDOM
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_SIGNER_RANDOM
uint16_t uniffi_lwk_checksum_constructor_signer_random(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_TRANSACTION_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_TRANSACTION_NEW
uint16_t uniffi_lwk_checksum_constructor_transaction_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_TXBUILDER_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_TXBUILDER_NEW
uint16_t uniffi_lwk_checksum_constructor_txbuilder_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_TXID_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_TXID_NEW
uint16_t uniffi_lwk_checksum_constructor_txid_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_UNVALIDATEDLIQUIDEXPROPOSAL_FROM_PSET
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_UNVALIDATEDLIQUIDEXPROPOSAL_FROM_PSET
uint16_t uniffi_lwk_checksum_constructor_unvalidatedliquidexproposal_from_pset(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_UNVALIDATEDLIQUIDEXPROPOSAL_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_UNVALIDATEDLIQUIDEXPROPOSAL_NEW
uint16_t uniffi_lwk_checksum_constructor_unvalidatedliquidexproposal_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_UPDATE_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_UPDATE_NEW
uint16_t uniffi_lwk_checksum_constructor_update_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_WOLLET_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_WOLLET_NEW
uint16_t uniffi_lwk_checksum_constructor_wollet_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_WOLLET_WITH_CUSTOM_PERSISTER
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_WOLLET_WITH_CUSTOM_PERSISTER
uint16_t uniffi_lwk_checksum_constructor_wollet_with_custom_persister(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_WOLLETDESCRIPTOR_NEW
#define UNIFFI_FFIDEF_UNIFFI_LWK_CHECKSUM_CONSTRUCTOR_WOLLETDESCRIPTOR_NEW
uint16_t uniffi_lwk_checksum_constructor_wolletdescriptor_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_LWK_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_LWK_UNIFFI_CONTRACT_VERSION
uint32_t ffi_lwk_uniffi_contract_version(void
    
);
#endif

 void lwk_cgo_dispatchCallbackInterfaceForeignPersisterMethod0(uint64_t uniffi_handle, uint64_t index, RustBuffer* uniffi_out_return, RustCallStatus* callStatus );
 void lwk_cgo_dispatchCallbackInterfaceForeignPersisterMethod1(uint64_t uniffi_handle, void* update, void* uniffi_out_return, RustCallStatus* callStatus );
 void lwk_cgo_dispatchCallbackInterfaceForeignPersisterFree(uint64_t handle);
