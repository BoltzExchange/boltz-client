syntax = "proto3";

package autoswaprpc;
option go_package = "github.com/BoltzExchange/boltz-client/boltzrpc/autoswaprpc";

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "boltzrpc.proto";

service AutoSwap {
  /*
  Returns a list of swaps which are currently recommended by autoswap. Also works when autoswap is not running.
  */
  rpc GetRecommendations (GetRecommendationsRequest) returns (GetRecommendationsResponse);

  /*
  Returns the current budget of autoswap and some relevant stats.
   */
  rpc GetStatus (GetStatusRequest) returns (GetStatusResponse);

  /*
  Updates the chain configuration entirely or partially. Autoswap will reload the configuration after this call.
  */
  rpc UpdateLightningConfig(UpdateLightningConfigRequest) returns (Config);

  /*
  Updates the lightning configuration entirely or partially. Autoswap will reload the configuration after this call.
  */
  rpc UpdateChainConfig(UpdateChainConfigRequest) returns (Config);

  /*
  Returns the currently used configurationencoded as json.
  If a key is specfied, only the value of that key will be returned.
  */
  rpc GetConfig(GetConfigRequest) returns (Config);

  /*
  Reloads the configuration from disk.
  */
  rpc ReloadConfig(google.protobuf.Empty) returns (Config);
}


message GetRecommendationsRequest {
  // Do not return any dismissed recommendations
  optional bool no_dismissed = 1;
}

message LightningRecommendation {
  uint64 amount = 1;
  uint64 fee_estimate = 2;
  // any reasons why the recommendation is not being executed
  repeated string dismissed_reasons = 3;
  string type = 4;
  boltzrpc.LightningChannel channel = 5;
}

message ChainRecommendation {
  uint64 amount = 1;
  uint64 fee_estimate = 2;
  // any reasons why the recommendation is not being executed
  repeated string dismissed_reasons = 3;
}

message Budget {
  uint64 total = 1;
  int64 remaining = 2;
  int64 start_date = 3;
  int64 end_date = 4;
}

message GetRecommendationsResponse {
  repeated LightningRecommendation lightning = 1;
  repeated ChainRecommendation chain = 2;
}

message GetStatusRequest {}

message Status {
  bool running = 1;
  optional string error = 2;
  optional boltzrpc.SwapStats stats = 3;
  optional Budget budget = 4;
  string description = 5;
}

message GetStatusResponse {
  optional Status lightning = 1;
  optional Status chain = 2;
  optional string error = 3;
}

message GetConfigRequest {}

message UpdateLightningConfigRequest {
  optional LightningConfig config = 1;
  google.protobuf.FieldMask field_mask = 2;
  optional bool reset = 3;
}

message UpdateChainConfigRequest {
  ChainConfig config = 1;
  optional google.protobuf.FieldMask field_mask = 2;
  optional bool reset = 3;
}

message Config {
  repeated ChainConfig chain = 1;
  repeated LightningConfig lightning = 2;
}

message ChainConfig {
  bool enabled = 1;
  string from_wallet = 2;
  string to_wallet = 3;
  string to_address = 4;
  uint64 from_threshold = 5;
  float max_fee_percent = 6;
  optional string entity = 7;
}

message LightningConfig {
    bool enabled = 1;
    uint64 channel_poll_interval = 2;
    string static_address = 3;
    uint64 max_balance = 4;
    uint64 min_balance = 5;
    float max_balance_percent = 6;
    float min_balance_percent = 7;
    float max_fee_percent = 8;
    bool accept_zero_conf = 9;
    uint64 failure_backoff = 10;
    uint64 budget = 11;
    uint64 budget_interval = 12;
    boltzrpc.Currency currency = 13;
    string swap_type = 14;
    bool per_channel = 15;
    string wallet = 16;
    uint64 max_swap_amount = 17;
    optional string entity = 18;
}
