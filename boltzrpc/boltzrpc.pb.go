// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: boltzrpc.proto

package boltzrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwapState int32

const (
	SwapState_PENDING    SwapState = 0
	SwapState_SUCCESSFUL SwapState = 1
	// Unknown client error. Check the error field of the message for more information
	SwapState_ERROR SwapState = 2
	// Unknown server error. Check the status field of the message for more information
	SwapState_SERVER_ERROR SwapState = 3
	// Client refunded locked coins after the HTLC timed out
	SwapState_REFUNDED SwapState = 4
	// Client noticed that the HTLC timed out but didn't find any outputs to refund
	SwapState_ABANDONED SwapState = 5
)

// Enum value maps for SwapState.
var (
	SwapState_name = map[int32]string{
		0: "PENDING",
		1: "SUCCESSFUL",
		2: "ERROR",
		3: "SERVER_ERROR",
		4: "REFUNDED",
		5: "ABANDONED",
	}
	SwapState_value = map[string]int32{
		"PENDING":      0,
		"SUCCESSFUL":   1,
		"ERROR":        2,
		"SERVER_ERROR": 3,
		"REFUNDED":     4,
		"ABANDONED":    5,
	}
)

func (x SwapState) Enum() *SwapState {
	p := new(SwapState)
	*p = x
	return p
}

func (x SwapState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwapState) Descriptor() protoreflect.EnumDescriptor {
	return file_boltzrpc_proto_enumTypes[0].Descriptor()
}

func (SwapState) Type() protoreflect.EnumType {
	return &file_boltzrpc_proto_enumTypes[0]
}

func (x SwapState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwapState.Descriptor instead.
func (SwapState) EnumDescriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{0}
}

type SwapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PairId string    `protobuf:"bytes,2,opt,name=pairId,proto3" json:"pairId,omitempty"`
	State  SwapState `protobuf:"varint,3,opt,name=state,proto3,enum=boltzrpc.SwapState" json:"state,omitempty"`
	Error  string    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	// Latest status message of the Boltz backend
	Status              string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	PrivateKey          string `protobuf:"bytes,6,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Preimage            string `protobuf:"bytes,7,opt,name=preimage,proto3" json:"preimage,omitempty"`
	RedeemScript        string `protobuf:"bytes,8,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	Invoice             string `protobuf:"bytes,9,opt,name=invoice,proto3" json:"invoice,omitempty"`
	LockupAddress       string `protobuf:"bytes,10,opt,name=lockup_address,json=lockupAddress,proto3" json:"lockup_address,omitempty"`
	ExpectedAmount      int64  `protobuf:"varint,11,opt,name=expected_amount,json=expectedAmount,proto3" json:"expected_amount,omitempty"`
	TimeoutBlockHeight  uint32 `protobuf:"varint,12,opt,name=timeout_block_height,json=timeoutBlockHeight,proto3" json:"timeout_block_height,omitempty"`
	LockupTransactionId string `protobuf:"bytes,13,opt,name=lockup_transaction_id,json=lockupTransactionId,proto3" json:"lockup_transaction_id,omitempty"`
	//
	//If the swap times out or fails for some other reason, the damon will automatically refund the coins sent to the
	//`lockup_address` back to the LND wallet and save the refund transaction id to the database.
	RefundTransactionId string `protobuf:"bytes,14,opt,name=refund_transaction_id,json=refundTransactionId,proto3" json:"refund_transaction_id,omitempty"`
}

func (x *SwapInfo) Reset() {
	*x = SwapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapInfo) ProtoMessage() {}

func (x *SwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapInfo.ProtoReflect.Descriptor instead.
func (*SwapInfo) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{0}
}

func (x *SwapInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwapInfo) GetPairId() string {
	if x != nil {
		return x.PairId
	}
	return ""
}

func (x *SwapInfo) GetState() SwapState {
	if x != nil {
		return x.State
	}
	return SwapState_PENDING
}

func (x *SwapInfo) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SwapInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SwapInfo) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *SwapInfo) GetPreimage() string {
	if x != nil {
		return x.Preimage
	}
	return ""
}

func (x *SwapInfo) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *SwapInfo) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

func (x *SwapInfo) GetLockupAddress() string {
	if x != nil {
		return x.LockupAddress
	}
	return ""
}

func (x *SwapInfo) GetExpectedAmount() int64 {
	if x != nil {
		return x.ExpectedAmount
	}
	return 0
}

func (x *SwapInfo) GetTimeoutBlockHeight() uint32 {
	if x != nil {
		return x.TimeoutBlockHeight
	}
	return 0
}

func (x *SwapInfo) GetLockupTransactionId() string {
	if x != nil {
		return x.LockupTransactionId
	}
	return ""
}

func (x *SwapInfo) GetRefundTransactionId() string {
	if x != nil {
		return x.RefundTransactionId
	}
	return ""
}

//
//Channel creations are an optional extension to a submarine swap in the data types of boltz-lnd.
type ChannelCreationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the swap to which this channel channel belongs
	SwapId                 string `protobuf:"bytes,1,opt,name=swap_id,json=swapId,proto3" json:"swap_id,omitempty"`
	Status                 string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	InboundLiquidity       uint32 `protobuf:"varint,3,opt,name=inbound_liquidity,json=inboundLiquidity,proto3" json:"inbound_liquidity,omitempty"`
	Private                bool   `protobuf:"varint,4,opt,name=private,proto3" json:"private,omitempty"`
	FundingTransactionId   string `protobuf:"bytes,5,opt,name=funding_transaction_id,json=fundingTransactionId,proto3" json:"funding_transaction_id,omitempty"`
	FundingTransactionVout uint32 `protobuf:"varint,6,opt,name=funding_transaction_vout,json=fundingTransactionVout,proto3" json:"funding_transaction_vout,omitempty"`
}

func (x *ChannelCreationInfo) Reset() {
	*x = ChannelCreationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCreationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCreationInfo) ProtoMessage() {}

func (x *ChannelCreationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCreationInfo.ProtoReflect.Descriptor instead.
func (*ChannelCreationInfo) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{1}
}

func (x *ChannelCreationInfo) GetSwapId() string {
	if x != nil {
		return x.SwapId
	}
	return ""
}

func (x *ChannelCreationInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChannelCreationInfo) GetInboundLiquidity() uint32 {
	if x != nil {
		return x.InboundLiquidity
	}
	return 0
}

func (x *ChannelCreationInfo) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *ChannelCreationInfo) GetFundingTransactionId() string {
	if x != nil {
		return x.FundingTransactionId
	}
	return ""
}

func (x *ChannelCreationInfo) GetFundingTransactionVout() uint32 {
	if x != nil {
		return x.FundingTransactionVout
	}
	return 0
}

type CombinedChannelSwapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swap            *SwapInfo            `protobuf:"bytes,1,opt,name=swap,proto3" json:"swap,omitempty"`
	ChannelCreation *ChannelCreationInfo `protobuf:"bytes,2,opt,name=channel_creation,json=channelCreation,proto3" json:"channel_creation,omitempty"`
}

func (x *CombinedChannelSwapInfo) Reset() {
	*x = CombinedChannelSwapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinedChannelSwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinedChannelSwapInfo) ProtoMessage() {}

func (x *CombinedChannelSwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinedChannelSwapInfo.ProtoReflect.Descriptor instead.
func (*CombinedChannelSwapInfo) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{2}
}

func (x *CombinedChannelSwapInfo) GetSwap() *SwapInfo {
	if x != nil {
		return x.Swap
	}
	return nil
}

func (x *CombinedChannelSwapInfo) GetChannelCreation() *ChannelCreationInfo {
	if x != nil {
		return x.ChannelCreation
	}
	return nil
}

type ReverseSwapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State SwapState `protobuf:"varint,2,opt,name=state,proto3,enum=boltzrpc.SwapState" json:"state,omitempty"`
	Error string    `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// Latest status message of the Boltz backend
	Status              string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	PrivateKey          string `protobuf:"bytes,5,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Preimage            string `protobuf:"bytes,6,opt,name=preimage,proto3" json:"preimage,omitempty"`
	RedeemScript        string `protobuf:"bytes,7,opt,name=redeem_script,json=redeemScript,proto3" json:"redeem_script,omitempty"`
	Invoice             string `protobuf:"bytes,8,opt,name=invoice,proto3" json:"invoice,omitempty"`
	ClaimAddress        string `protobuf:"bytes,9,opt,name=claim_address,json=claimAddress,proto3" json:"claim_address,omitempty"`
	OnchainAmount       int64  `protobuf:"varint,10,opt,name=onchain_amount,json=onchainAmount,proto3" json:"onchain_amount,omitempty"`
	TimeoutBlockHeight  uint32 `protobuf:"varint,11,opt,name=timeout_block_height,json=timeoutBlockHeight,proto3" json:"timeout_block_height,omitempty"`
	LockupTransactionId string `protobuf:"bytes,12,opt,name=lockup_transaction_id,json=lockupTransactionId,proto3" json:"lockup_transaction_id,omitempty"`
	ClaimTransactionId  string `protobuf:"bytes,13,opt,name=claim_transaction_id,json=claimTransactionId,proto3" json:"claim_transaction_id,omitempty"`
	PairId              string `protobuf:"bytes,14,opt,name=pairId,proto3" json:"pairId,omitempty"`
}

func (x *ReverseSwapInfo) Reset() {
	*x = ReverseSwapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwapInfo) ProtoMessage() {}

func (x *ReverseSwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwapInfo.ProtoReflect.Descriptor instead.
func (*ReverseSwapInfo) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{3}
}

func (x *ReverseSwapInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReverseSwapInfo) GetState() SwapState {
	if x != nil {
		return x.State
	}
	return SwapState_PENDING
}

func (x *ReverseSwapInfo) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ReverseSwapInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReverseSwapInfo) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *ReverseSwapInfo) GetPreimage() string {
	if x != nil {
		return x.Preimage
	}
	return ""
}

func (x *ReverseSwapInfo) GetRedeemScript() string {
	if x != nil {
		return x.RedeemScript
	}
	return ""
}

func (x *ReverseSwapInfo) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

func (x *ReverseSwapInfo) GetClaimAddress() string {
	if x != nil {
		return x.ClaimAddress
	}
	return ""
}

func (x *ReverseSwapInfo) GetOnchainAmount() int64 {
	if x != nil {
		return x.OnchainAmount
	}
	return 0
}

func (x *ReverseSwapInfo) GetTimeoutBlockHeight() uint32 {
	if x != nil {
		return x.TimeoutBlockHeight
	}
	return 0
}

func (x *ReverseSwapInfo) GetLockupTransactionId() string {
	if x != nil {
		return x.LockupTransactionId
	}
	return ""
}

func (x *ReverseSwapInfo) GetClaimTransactionId() string {
	if x != nil {
		return x.ClaimTransactionId
	}
	return ""
}

func (x *ReverseSwapInfo) GetPairId() string {
	if x != nil {
		return x.PairId
	}
	return ""
}

type GetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{4}
}

type GetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol              string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Network             string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	LndPubkey           string   `protobuf:"bytes,3,opt,name=lnd_pubkey,json=lndPubkey,proto3" json:"lnd_pubkey,omitempty"`
	BlockHeight         uint32   `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	PendingSwaps        []string `protobuf:"bytes,5,rep,name=pending_swaps,json=pendingSwaps,proto3" json:"pending_swaps,omitempty"`
	PendingReverseSwaps []string `protobuf:"bytes,6,rep,name=pending_reverse_swaps,json=pendingReverseSwaps,proto3" json:"pending_reverse_swaps,omitempty"`
}

func (x *GetInfoResponse) Reset() {
	*x = GetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResponse) ProtoMessage() {}

func (x *GetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{5}
}

func (x *GetInfoResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetInfoResponse) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetInfoResponse) GetLndPubkey() string {
	if x != nil {
		return x.LndPubkey
	}
	return ""
}

func (x *GetInfoResponse) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *GetInfoResponse) GetPendingSwaps() []string {
	if x != nil {
		return x.PendingSwaps
	}
	return nil
}

func (x *GetInfoResponse) GetPendingReverseSwaps() []string {
	if x != nil {
		return x.PendingReverseSwaps
	}
	return nil
}

type MinerFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Normal  uint32 `protobuf:"varint,1,opt,name=normal,proto3" json:"normal,omitempty"`
	Reverse uint32 `protobuf:"varint,2,opt,name=reverse,proto3" json:"reverse,omitempty"`
}

func (x *MinerFees) Reset() {
	*x = MinerFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerFees) ProtoMessage() {}

func (x *MinerFees) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerFees.ProtoReflect.Descriptor instead.
func (*MinerFees) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{6}
}

func (x *MinerFees) GetNormal() uint32 {
	if x != nil {
		return x.Normal
	}
	return 0
}

func (x *MinerFees) GetReverse() uint32 {
	if x != nil {
		return x.Reverse
	}
	return 0
}

type Fees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage float32    `protobuf:"fixed32,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Miner      *MinerFees `protobuf:"bytes,2,opt,name=miner,proto3" json:"miner,omitempty"`
}

func (x *Fees) Reset() {
	*x = Fees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fees) ProtoMessage() {}

func (x *Fees) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fees.ProtoReflect.Descriptor instead.
func (*Fees) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{7}
}

func (x *Fees) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *Fees) GetMiner() *MinerFees {
	if x != nil {
		return x.Miner
	}
	return nil
}

type Limits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Minimal int64 `protobuf:"varint,1,opt,name=minimal,proto3" json:"minimal,omitempty"`
	Maximal int64 `protobuf:"varint,2,opt,name=maximal,proto3" json:"maximal,omitempty"`
}

func (x *Limits) Reset() {
	*x = Limits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limits) ProtoMessage() {}

func (x *Limits) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limits.ProtoReflect.Descriptor instead.
func (*Limits) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{8}
}

func (x *Limits) GetMinimal() int64 {
	if x != nil {
		return x.Minimal
	}
	return 0
}

func (x *Limits) GetMaximal() int64 {
	if x != nil {
		return x.Maximal
	}
	return 0
}

type GetServiceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetServiceInfoRequest) Reset() {
	*x = GetServiceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceInfoRequest) ProtoMessage() {}

func (x *GetServiceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceInfoRequest.ProtoReflect.Descriptor instead.
func (*GetServiceInfoRequest) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{9}
}

type GetServiceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fees   *Fees   `protobuf:"bytes,1,opt,name=fees,proto3" json:"fees,omitempty"`
	Limits *Limits `protobuf:"bytes,2,opt,name=limits,proto3" json:"limits,omitempty"`
}

func (x *GetServiceInfoResponse) Reset() {
	*x = GetServiceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceInfoResponse) ProtoMessage() {}

func (x *GetServiceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceInfoResponse.ProtoReflect.Descriptor instead.
func (*GetServiceInfoResponse) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{10}
}

func (x *GetServiceInfoResponse) GetFees() *Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *GetServiceInfoResponse) GetLimits() *Limits {
	if x != nil {
		return x.Limits
	}
	return nil
}

type ListSwapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSwapsRequest) Reset() {
	*x = ListSwapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSwapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSwapsRequest) ProtoMessage() {}

func (x *ListSwapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSwapsRequest.ProtoReflect.Descriptor instead.
func (*ListSwapsRequest) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{11}
}

type ListSwapsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swaps            []*SwapInfo                `protobuf:"bytes,1,rep,name=swaps,proto3" json:"swaps,omitempty"`
	ChannelCreations []*CombinedChannelSwapInfo `protobuf:"bytes,2,rep,name=channel_creations,json=channelCreations,proto3" json:"channel_creations,omitempty"`
	ReverseSwaps     []*ReverseSwapInfo         `protobuf:"bytes,3,rep,name=reverse_swaps,json=reverseSwaps,proto3" json:"reverse_swaps,omitempty"`
}

func (x *ListSwapsResponse) Reset() {
	*x = ListSwapsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSwapsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSwapsResponse) ProtoMessage() {}

func (x *ListSwapsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSwapsResponse.ProtoReflect.Descriptor instead.
func (*ListSwapsResponse) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{12}
}

func (x *ListSwapsResponse) GetSwaps() []*SwapInfo {
	if x != nil {
		return x.Swaps
	}
	return nil
}

func (x *ListSwapsResponse) GetChannelCreations() []*CombinedChannelSwapInfo {
	if x != nil {
		return x.ChannelCreations
	}
	return nil
}

func (x *ListSwapsResponse) GetReverseSwaps() []*ReverseSwapInfo {
	if x != nil {
		return x.ReverseSwaps
	}
	return nil
}

type GetSwapInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSwapInfoRequest) Reset() {
	*x = GetSwapInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSwapInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapInfoRequest) ProtoMessage() {}

func (x *GetSwapInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSwapInfoRequest) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{13}
}

func (x *GetSwapInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSwapInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swap            *SwapInfo            `protobuf:"bytes,1,opt,name=swap,proto3" json:"swap,omitempty"`
	ChannelCreation *ChannelCreationInfo `protobuf:"bytes,2,opt,name=channel_creation,json=channelCreation,proto3" json:"channel_creation,omitempty"`
	ReverseSwap     *ReverseSwapInfo     `protobuf:"bytes,3,opt,name=reverse_swap,json=reverseSwap,proto3" json:"reverse_swap,omitempty"`
}

func (x *GetSwapInfoResponse) Reset() {
	*x = GetSwapInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSwapInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwapInfoResponse) ProtoMessage() {}

func (x *GetSwapInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwapInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSwapInfoResponse) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{14}
}

func (x *GetSwapInfoResponse) GetSwap() *SwapInfo {
	if x != nil {
		return x.Swap
	}
	return nil
}

func (x *GetSwapInfoResponse) GetChannelCreation() *ChannelCreationInfo {
	if x != nil {
		return x.ChannelCreation
	}
	return nil
}

func (x *GetSwapInfoResponse) GetReverseSwap() *ReverseSwapInfo {
	if x != nil {
		return x.ReverseSwap
	}
	return nil
}

type DepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//Percentage of inbound liquidity the channel that is opened in case the invoice cannot be paid should have.
	//25 by default.
	InboundLiquidity uint32 `protobuf:"varint,1,opt,name=inbound_liquidity,json=inboundLiquidity,proto3" json:"inbound_liquidity,omitempty"`
	PairId           string `protobuf:"bytes,2,opt,name=pairId,proto3" json:"pairId,omitempty"`
}

func (x *DepositRequest) Reset() {
	*x = DepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRequest) ProtoMessage() {}

func (x *DepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositRequest.ProtoReflect.Descriptor instead.
func (*DepositRequest) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{15}
}

func (x *DepositRequest) GetInboundLiquidity() uint32 {
	if x != nil {
		return x.InboundLiquidity
	}
	return 0
}

func (x *DepositRequest) GetPairId() string {
	if x != nil {
		return x.PairId
	}
	return ""
}

type DepositResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address            string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	TimeoutBlockHeight uint32 `protobuf:"varint,3,opt,name=timeout_block_height,json=timeoutBlockHeight,proto3" json:"timeout_block_height,omitempty"`
}

func (x *DepositResponse) Reset() {
	*x = DepositResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositResponse) ProtoMessage() {}

func (x *DepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositResponse.ProtoReflect.Descriptor instead.
func (*DepositResponse) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{16}
}

func (x *DepositResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DepositResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DepositResponse) GetTimeoutBlockHeight() uint32 {
	if x != nil {
		return x.TimeoutBlockHeight
	}
	return 0
}

type CreateSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	PairId string `protobuf:"bytes,2,opt,name=pairId,proto3" json:"pairId,omitempty"`
}

func (x *CreateSwapRequest) Reset() {
	*x = CreateSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSwapRequest) ProtoMessage() {}

func (x *CreateSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSwapRequest.ProtoReflect.Descriptor instead.
func (*CreateSwapRequest) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{17}
}

func (x *CreateSwapRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateSwapRequest) GetPairId() string {
	if x != nil {
		return x.PairId
	}
	return ""
}

type CreateSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address        string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ExpectedAmount int64  `protobuf:"varint,3,opt,name=expected_amount,json=expectedAmount,proto3" json:"expected_amount,omitempty"`
	Bip21          string `protobuf:"bytes,4,opt,name=bip21,proto3" json:"bip21,omitempty"`
}

func (x *CreateSwapResponse) Reset() {
	*x = CreateSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSwapResponse) ProtoMessage() {}

func (x *CreateSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSwapResponse.ProtoReflect.Descriptor instead.
func (*CreateSwapResponse) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{18}
}

func (x *CreateSwapResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSwapResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateSwapResponse) GetExpectedAmount() int64 {
	if x != nil {
		return x.ExpectedAmount
	}
	return 0
}

func (x *CreateSwapResponse) GetBip21() string {
	if x != nil {
		return x.Bip21
	}
	return ""
}

type CreateChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	//
	//Percentage of inbound liquidity the channel that is opened should have.
	//25 by default.
	InboundLiquidity uint32 `protobuf:"varint,2,opt,name=inbound_liquidity,json=inboundLiquidity,proto3" json:"inbound_liquidity,omitempty"`
	Private          bool   `protobuf:"varint,3,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *CreateChannelRequest) Reset() {
	*x = CreateChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelRequest) ProtoMessage() {}

func (x *CreateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateChannelRequest) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{19}
}

func (x *CreateChannelRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateChannelRequest) GetInboundLiquidity() uint32 {
	if x != nil {
		return x.InboundLiquidity
	}
	return 0
}

func (x *CreateChannelRequest) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

type CreateReverseSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// If no value is set, the daemon will query a new P2WKH address from LND
	Address        string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	AcceptZeroConf bool   `protobuf:"varint,3,opt,name=accept_zero_conf,json=acceptZeroConf,proto3" json:"accept_zero_conf,omitempty"`
	PairId         string `protobuf:"bytes,4,opt,name=pairId,proto3" json:"pairId,omitempty"`
}

func (x *CreateReverseSwapRequest) Reset() {
	*x = CreateReverseSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReverseSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReverseSwapRequest) ProtoMessage() {}

func (x *CreateReverseSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReverseSwapRequest.ProtoReflect.Descriptor instead.
func (*CreateReverseSwapRequest) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{20}
}

func (x *CreateReverseSwapRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateReverseSwapRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateReverseSwapRequest) GetAcceptZeroConf() bool {
	if x != nil {
		return x.AcceptZeroConf
	}
	return false
}

func (x *CreateReverseSwapRequest) GetPairId() string {
	if x != nil {
		return x.PairId
	}
	return ""
}

type CreateReverseSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LockupAddress      string `protobuf:"bytes,2,opt,name=lockup_address,json=lockupAddress,proto3" json:"lockup_address,omitempty"`
	RoutingFeeMilliSat uint32 `protobuf:"varint,3,opt,name=routing_fee_milli_sat,json=routingFeeMilliSat,proto3" json:"routing_fee_milli_sat,omitempty"`
	// Only populated when 0-conf is accepted
	ClaimTransactionId string `protobuf:"bytes,4,opt,name=claim_transaction_id,json=claimTransactionId,proto3" json:"claim_transaction_id,omitempty"`
}

func (x *CreateReverseSwapResponse) Reset() {
	*x = CreateReverseSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boltzrpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReverseSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReverseSwapResponse) ProtoMessage() {}

func (x *CreateReverseSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boltzrpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReverseSwapResponse.ProtoReflect.Descriptor instead.
func (*CreateReverseSwapResponse) Descriptor() ([]byte, []int) {
	return file_boltzrpc_proto_rawDescGZIP(), []int{21}
}

func (x *CreateReverseSwapResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateReverseSwapResponse) GetLockupAddress() string {
	if x != nil {
		return x.LockupAddress
	}
	return ""
}

func (x *CreateReverseSwapResponse) GetRoutingFeeMilliSat() uint32 {
	if x != nil {
		return x.RoutingFeeMilliSat
	}
	return 0
}

func (x *CreateReverseSwapResponse) GetClaimTransactionId() string {
	if x != nil {
		return x.ClaimTransactionId
	}
	return ""
}

var File_boltzrpc_proto protoreflect.FileDescriptor

var file_boltzrpc_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x22, 0xf1, 0x03, 0x0a, 0x08, 0x53,
	0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x69, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f,
	0x63, 0x6b, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xfd,
	0x01, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x77, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x75, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x75, 0x74, 0x22, 0x8b,
	0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x77,
	0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x77,
	0x61, 0x70, 0x12, 0x48, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62,
	0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x03, 0x0a,
	0x0f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x6e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x69,
	0x72, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x72, 0x49,
	0x64, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6e, 0x64,
	0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6e, 0x64, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x61, 0x70, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x73, 0x22, 0x3d, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x46, 0x65, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x6c,
	0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x46, 0x65, 0x65, 0x73, 0x52,
	0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x06, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x69, 0x6d, 0x61, 0x6c, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63,
	0x2e, 0x46, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f,
	0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x06, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77, 0x61,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x05, 0x73, 0x77, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x73, 0x77, 0x61, 0x70, 0x73, 0x12, 0x4e, 0x0a, 0x11, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xc5, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x77, 0x61, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x77, 0x61, 0x70, 0x12,
	0x48, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6f, 0x6c, 0x74,
	0x7a, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x22, 0x55, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x69, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x72, 0x49, 0x64, 0x22, 0x6d,
	0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x43, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x69, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x72,
	0x49, 0x64, 0x22, 0x7d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x69, 0x70, 0x32, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x70, 0x32,
	0x31, 0x22, 0x75, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x72, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x31,
	0x0a, 0x15, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x5f, 0x73, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x53, 0x61,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x2a, 0x62, 0x0a, 0x09, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45,
	0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x42, 0x41, 0x4e,
	0x44, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x05, 0x32, 0xe4, 0x04, 0x0a, 0x05, 0x42, 0x6f, 0x6c, 0x74,
	0x7a, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x62,
	0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77,
	0x61, 0x70, 0x73, 0x12, 0x1a, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x62, 0x6f,
	0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6f, 0x6c, 0x74,
	0x7a, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x12, 0x18, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x12, 0x1b, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1e, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x12, 0x22, 0x2e, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x6f, 0x6c, 0x74,
	0x7a, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2d,
	0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x42, 0x6f, 0x6c,
	0x74, 0x7a, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x62, 0x6f, 0x6c, 0x74, 0x7a,
	0x2d, 0x6c, 0x6e, 0x64, 0x2f, 0x62, 0x6f, 0x6c, 0x74, 0x7a, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_boltzrpc_proto_rawDescOnce sync.Once
	file_boltzrpc_proto_rawDescData = file_boltzrpc_proto_rawDesc
)

func file_boltzrpc_proto_rawDescGZIP() []byte {
	file_boltzrpc_proto_rawDescOnce.Do(func() {
		file_boltzrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_boltzrpc_proto_rawDescData)
	})
	return file_boltzrpc_proto_rawDescData
}

var file_boltzrpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_boltzrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_boltzrpc_proto_goTypes = []interface{}{
	(SwapState)(0),                    // 0: boltzrpc.SwapState
	(*SwapInfo)(nil),                  // 1: boltzrpc.SwapInfo
	(*ChannelCreationInfo)(nil),       // 2: boltzrpc.ChannelCreationInfo
	(*CombinedChannelSwapInfo)(nil),   // 3: boltzrpc.CombinedChannelSwapInfo
	(*ReverseSwapInfo)(nil),           // 4: boltzrpc.ReverseSwapInfo
	(*GetInfoRequest)(nil),            // 5: boltzrpc.GetInfoRequest
	(*GetInfoResponse)(nil),           // 6: boltzrpc.GetInfoResponse
	(*MinerFees)(nil),                 // 7: boltzrpc.MinerFees
	(*Fees)(nil),                      // 8: boltzrpc.Fees
	(*Limits)(nil),                    // 9: boltzrpc.Limits
	(*GetServiceInfoRequest)(nil),     // 10: boltzrpc.GetServiceInfoRequest
	(*GetServiceInfoResponse)(nil),    // 11: boltzrpc.GetServiceInfoResponse
	(*ListSwapsRequest)(nil),          // 12: boltzrpc.ListSwapsRequest
	(*ListSwapsResponse)(nil),         // 13: boltzrpc.ListSwapsResponse
	(*GetSwapInfoRequest)(nil),        // 14: boltzrpc.GetSwapInfoRequest
	(*GetSwapInfoResponse)(nil),       // 15: boltzrpc.GetSwapInfoResponse
	(*DepositRequest)(nil),            // 16: boltzrpc.DepositRequest
	(*DepositResponse)(nil),           // 17: boltzrpc.DepositResponse
	(*CreateSwapRequest)(nil),         // 18: boltzrpc.CreateSwapRequest
	(*CreateSwapResponse)(nil),        // 19: boltzrpc.CreateSwapResponse
	(*CreateChannelRequest)(nil),      // 20: boltzrpc.CreateChannelRequest
	(*CreateReverseSwapRequest)(nil),  // 21: boltzrpc.CreateReverseSwapRequest
	(*CreateReverseSwapResponse)(nil), // 22: boltzrpc.CreateReverseSwapResponse
}
var file_boltzrpc_proto_depIdxs = []int32{
	0,  // 0: boltzrpc.SwapInfo.state:type_name -> boltzrpc.SwapState
	1,  // 1: boltzrpc.CombinedChannelSwapInfo.swap:type_name -> boltzrpc.SwapInfo
	2,  // 2: boltzrpc.CombinedChannelSwapInfo.channel_creation:type_name -> boltzrpc.ChannelCreationInfo
	0,  // 3: boltzrpc.ReverseSwapInfo.state:type_name -> boltzrpc.SwapState
	7,  // 4: boltzrpc.Fees.miner:type_name -> boltzrpc.MinerFees
	8,  // 5: boltzrpc.GetServiceInfoResponse.fees:type_name -> boltzrpc.Fees
	9,  // 6: boltzrpc.GetServiceInfoResponse.limits:type_name -> boltzrpc.Limits
	1,  // 7: boltzrpc.ListSwapsResponse.swaps:type_name -> boltzrpc.SwapInfo
	3,  // 8: boltzrpc.ListSwapsResponse.channel_creations:type_name -> boltzrpc.CombinedChannelSwapInfo
	4,  // 9: boltzrpc.ListSwapsResponse.reverse_swaps:type_name -> boltzrpc.ReverseSwapInfo
	1,  // 10: boltzrpc.GetSwapInfoResponse.swap:type_name -> boltzrpc.SwapInfo
	2,  // 11: boltzrpc.GetSwapInfoResponse.channel_creation:type_name -> boltzrpc.ChannelCreationInfo
	4,  // 12: boltzrpc.GetSwapInfoResponse.reverse_swap:type_name -> boltzrpc.ReverseSwapInfo
	5,  // 13: boltzrpc.Boltz.GetInfo:input_type -> boltzrpc.GetInfoRequest
	10, // 14: boltzrpc.Boltz.GetServiceInfo:input_type -> boltzrpc.GetServiceInfoRequest
	12, // 15: boltzrpc.Boltz.ListSwaps:input_type -> boltzrpc.ListSwapsRequest
	14, // 16: boltzrpc.Boltz.GetSwapInfo:input_type -> boltzrpc.GetSwapInfoRequest
	16, // 17: boltzrpc.Boltz.Deposit:input_type -> boltzrpc.DepositRequest
	18, // 18: boltzrpc.Boltz.CreateSwap:input_type -> boltzrpc.CreateSwapRequest
	20, // 19: boltzrpc.Boltz.CreateChannel:input_type -> boltzrpc.CreateChannelRequest
	21, // 20: boltzrpc.Boltz.CreateReverseSwap:input_type -> boltzrpc.CreateReverseSwapRequest
	6,  // 21: boltzrpc.Boltz.GetInfo:output_type -> boltzrpc.GetInfoResponse
	11, // 22: boltzrpc.Boltz.GetServiceInfo:output_type -> boltzrpc.GetServiceInfoResponse
	13, // 23: boltzrpc.Boltz.ListSwaps:output_type -> boltzrpc.ListSwapsResponse
	15, // 24: boltzrpc.Boltz.GetSwapInfo:output_type -> boltzrpc.GetSwapInfoResponse
	17, // 25: boltzrpc.Boltz.Deposit:output_type -> boltzrpc.DepositResponse
	19, // 26: boltzrpc.Boltz.CreateSwap:output_type -> boltzrpc.CreateSwapResponse
	19, // 27: boltzrpc.Boltz.CreateChannel:output_type -> boltzrpc.CreateSwapResponse
	22, // 28: boltzrpc.Boltz.CreateReverseSwap:output_type -> boltzrpc.CreateReverseSwapResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_boltzrpc_proto_init() }
func file_boltzrpc_proto_init() {
	if File_boltzrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_boltzrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCreationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinedChannelSwapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSwapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSwapsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSwapInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSwapInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReverseSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boltzrpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReverseSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_boltzrpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_boltzrpc_proto_goTypes,
		DependencyIndexes: file_boltzrpc_proto_depIdxs,
		EnumInfos:         file_boltzrpc_proto_enumTypes,
		MessageInfos:      file_boltzrpc_proto_msgTypes,
	}.Build()
	File_boltzrpc_proto = out.File
	file_boltzrpc_proto_rawDesc = nil
	file_boltzrpc_proto_goTypes = nil
	file_boltzrpc_proto_depIdxs = nil
}
